{"ast":null,"code":"var _jsxFileName = \"/Users/Rags/task-manager-app/src/components/WeeklyPriorities.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckCircle, Circle, Plus, X, ArrowRight, Trash2, Timer, GripVertical } from 'lucide-react';\n//import { data } from 'autoprefixer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeeklyPriorities = ({\n  priorities,\n  setPriorities,\n  tasks,\n  setTasks\n}) => {\n  _s();\n  const [addingTaskForPriority, setAddingTaskForPriority] = useState(null);\n  const [newTaskTitle, setNewTaskTitle] = useState(''); // added this new\n  const [viewMode, setViewMode] = useState('today'); // 'today' or 'week'\n\n  const today = new Date().toISOString().split('T')[0];\n\n  // Task rollover effect\n  useEffect(() => {\n    const rollOverTasks = () => {\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      const tomorrowString = tomorrow.toISOString().split('T')[0];\n      setTasks(prevTasks => {\n        const todayTasks = prevTasks[today] || [];\n        const unfinishedTasks = todayTasks.filter(task => task.status !== 'done');\n        return {\n          ...prevTasks,\n          [tomorrowString]: [...(prevTasks[tomorrowString] || []), ...unfinishedTasks]\n        };\n      });\n    };\n    const now = new Date();\n    const endOfDay = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 23, 59, 59, 999);\n    const timeUntilEndOfDay = endOfDay.getTime() - now.getTime();\n    const timerId = setTimeout(rollOverTasks, timeUntilEndOfDay);\n    return () => clearTimeout(timerId);\n  }, [today, setTasks]);\n\n  // Logging effect for debugging\n  useEffect(() => {\n    console.log(\"current tasks:\", tasks);\n  }, [tasks]);\n  const handlePriorityChange = (id, field, value) => {\n    setPriorities(priorities => priorities.map(p => p.id === id ? {\n      ...p,\n      [field]: value\n    } : p));\n  };\n  const getTasksForPriority = priorityId => {\n    if (viewMode === 'today') {\n      return (tasks[today] || []).filter(task => task.priority === priorityId.toString);\n    } else {\n      // Week view - get tasks from monday to sunday\n      const weekStart = new Date(today);\n      weekStart.setDate(weekStart.getDate() - weekStart.getDay() + 1);\n      const weekEnd = new Date(weekStart);\n      weekEnd.setDate(weekEnd.getDate() + 6);\n      return Object.entries(tasks).filter(([date]) => {\n        const taskDate = new Date(date);\n        return taskDate >= weekStart && taskDate <= weekEnd;\n      }).flatMap(([date, dayTasks]) => dayTasks.filter(task => task.priority === priorityId.toString));\n    }\n  };\n\n  /* DEPRECATED Modified to replace newTask state with newTaskTitle\n  const handleAddTask = (priorityId) => {\n    if (newTaskTitle.trim()) {\n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [today]: [\n          ...(prevTasks[today] || []),\n          {\n            id: Date.now().toString(),\n            title: newTaskTitle.trim(),\n            status: 'pending',\n            priority: priorityId, //removed toString() \n            date: today,\n            completedPomodoros: 0\n          }\n        ]\n      }));\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  }; */\n\n  const handleAddTask = priorityId => {\n    if (newTaskTitle.trim()) {\n      const newTask = {\n        id: Date.now().toString(),\n        title: newTaskTitle.trim(),\n        status: 'pending',\n        priority: priorityId.toString(),\n        date: today,\n        completedPomodoros: 0\n      };\n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [today]: [...(prevTasks[today] || []), newTask]\n      }));\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n\n  // New function handleKeyPress to allow task creation with Enter\n  const handleKeyPress = (event, priorityId) => {\n    if (event.key === 'Enter') {\n      handleAddTask(priorityId);\n    }\n  };\n  const handleTaskChange = (taskId, date, field, value) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        [field]: value\n      } : task)\n    }));\n  };\n  const toggleTaskStatus = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        status: task.status === 'done' ? 'pending' : 'done'\n      } : task)\n    }));\n  };\n  const deferTask = (taskId, date) => {\n    const tomorrow = new Date(date);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const tomorrowString = tomorrow.toISOString().split('T')[0];\n    setTasks(prevTasks => {\n      const taskToDefer = prevTasks[date].find(task => task.id === taskId);\n      return {\n        ...prevTasks,\n        [date]: prevTasks[date].filter(task => task.id !== taskId),\n        [tomorrowString]: [...(prevTasks[tomorrowString] || []), {\n          ...taskToDefer,\n          date: tomorrowString,\n          status: 'deferred'\n        }]\n      };\n    });\n  };\n  const deleteTask = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        status: 'deleted'\n      } : task)\n    }));\n  };\n  const getDayOfWeek = dateString => {\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const date = new Date(dateString);\n    return days[date.getDay()];\n  };\n  const isToday = dateString => {\n    return dateString === today;\n  };\n\n  // Adding a function to add a pomodoro\n  const addPomodoro = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        completedPomodoros: (task.completedPomodoros || 0) + 1\n      } : task)\n    }));\n  };\n\n  // Modify this to correct errors with drag and drop\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n\n    // Dropped outside the list\n    if (!destination) {\n      return;\n    }\n    const sourceDate = source.droppableId;\n    const destDate = destination.droppableId; // dropped the split\n\n    // If the task was dropped in a different date, we don't allow it\n    if (sourceDate !== destDate) {\n      return;\n    }\n\n    // Add some console logging to debug\n    console.log('Current tasks state', tasks);\n    console.log('Source date:', sourceDate);\n    const currentTasks = tasks[sourceDate] || [];\n    if (!Array.isArray(currentTasks)) {\n      console.error('Tasks for current date are not an array:', currentTasks);\n      return;\n    }\n    const newTasks = Array.from(currentTasks);\n    const [reorderedItem] = newTasks.splice(source.index, 1);\n    newTasks.splice(destination.index, 0, reorderedItem);\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [sourceDate]: newTasks\n    }));\n  };\n\n  /* Modified to get pomodoros on the same line - replace with new draggable version\n  const renderTask = (task) => (\n    <div key={task.id} className=\"flex items-center text-sm mb-2\">\n      {task.status === 'done' ? (\n        <CheckCircle className=\"w-4 h-4 text-green-500 mr-2 flex-shrink-0\" />\n      ) : (\n        <button onClick={() => toggleTaskStatus(task.id, task.date)} className=\"mr-2 flex-shrink-0\">\n          <Circle className=\"w-4 h-4 text-gray-300\" />\n        </button>\n      )}\n      <input\n        value={task.title}\n        onChange={(e) => handleTaskChange(task.id, task.date, 'title', e.target.value)}\n        className={`flex-grow bg-transparent border-none focus:outline-none focus:ring-0 ${task.status === 'done' ? 'text-gray-500' : ''}`}\n        disabled={task.status === 'done'}\n      />\n      {task.completedPomodoros > 0 && (\n        <div className=\"flex items-center mr-2\">\n          <Timer className=\"w-4 h-4 text-red-500 mr-1\" />\n          <span className=\"text-xs text-gray-600\">{task.completedPomodoros}</span>\n        </div>\n      )}\n      {task.status !== 'done' && (\n        <>\n          <button onClick={() => addPomodoro(task.id, task.date)} className=\"ml-2 text-gray-400 hover:text-gray-600\">\n            <Plus className=\"w-4 h-4\" />\n          </button>\n          <button onClick={() => deferTask(task.id, task.date)} className=\"ml-2 text-blue-500 hover:text-blue-700\">\n            <ArrowRight className=\"w-4 h-4\" />\n          </button>\n          <button onClick={() => deleteTask(task.id, task.date)} className=\"ml-2 text-red-500 hover:text-red-700\">\n            <Trash2 className=\"w-4 h-4\" />\n          </button>\n        </>\n      )}\n      {viewMode === 'week' && (\n        <span className={`ml-2 text-xs ${isToday(task.date) ? 'bg-blue-500 text-white px-2 py-1 rounded-full' : 'text-gray-500'}`}>\n          {isToday(task.date) ? 'Today' : getDayOfWeek(task.date)}\n        </span>\n      )}\n    </div>\n  ); */\n\n  const renderTask = (task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: task.id,\n    index: index,\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      className: `flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ...provided.dragHandleProps,\n        className: \"mr-2 cursor-move\",\n        children: /*#__PURE__*/_jsxDEV(GripVertical, {\n          className: \"w-4 h-4 text-gray-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), task.status === 'done' ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n        className: \"w-4 h-4 text-green-500 mr-2 flex-shrink-0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleTaskStatus(task.id, task.date),\n        className: \"mr-2 flex-shrink-0\",\n        children: /*#__PURE__*/_jsxDEV(Circle, {\n          className: \"w-4 h-4 text-gray-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: task.title,\n        onChange: e => handleTaskChange(task.id, task.date, 'title', e.target.value),\n        className: `flex-grow bg-transparent border-none focus:outline-none focus:ring-0 ${task.status === 'done' ? 'text-gray-500' : ''}`,\n        disabled: task.status === 'done'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), task.completedPomodoros > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mr-2\",\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          className: \"w-4 h-4 text-red-500 mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-600\",\n          children: task.completedPomodoros\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }, this), task.status !== 'done' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addPomodoro(task.id, task.date),\n          className: \"ml-2 text-gray-400 hover:text-gray-600\",\n          children: /*#__PURE__*/_jsxDEV(Plus, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deferTask(task.id, task.date),\n          className: \"ml-2 text-blue-500 hover:text-blue-700\",\n          children: /*#__PURE__*/_jsxDEV(ArrowRight, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id, task.date),\n          className: \"ml-2 text-red-500 hover:text-red-700\",\n          children: /*#__PURE__*/_jsxDEV(Trash2, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), viewMode === 'week' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `ml-2 text-xs ${isToday(task.date) ? 'bg-blue-500 text-white px-2 py-1 rounded-full' : 'text-gray-500'}`,\n        children: isToday(task.date) ? 'Today' : getDayOfWeek(task.date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this)\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n\n  /* OLD redo section with changes, also to add draggable features\n  return (\n    <div className=\"max-w-4xl mx-auto p-4\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-semibold\">{viewMode === 'today' ? \"Today's\" : \"This Week's\"} Priorities</h1>\n        <div className=\"flex items-center bg-gray-200 rounded-full\">\n          <button\n            className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n            onClick={() => setViewMode('today')}\n          >\n            Today\n          </button>\n          <button\n            className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n            onClick={() => setViewMode('week')}\n          >\n            Week\n          </button>\n        </div>\n      </div>\n      {priorities.map((priority) => (\n        <div key={priority.id} className=\"bg-white rounded-lg shadow-md mb-6 p-4\">\n          <div className=\"flex items-center mb-2\">\n            <span className={`w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`}></span>\n            <input\n              className=\"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\"\n              placeholder={`Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`}\n              value={priority.title}\n              onChange={(e) => handlePriorityChange(priority.id, 'title', e.target.value)}\n            />\n          </div>\n          <textarea\n            className=\"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\"\n            placeholder=\"Describe successful outcome\"\n            value={priority.outcome}\n            onChange={(e) => handlePriorityChange(priority.id, 'outcome', e.target.value)}\n            rows=\"2\"\n          />\n             <div className=\"mt-2\">\n            {getTasksForPriority(priority.id).map(renderTask)}\n            {viewMode === 'today' && (\n              addingTaskForPriority === priority.id ? (\n                <div className=\"flex items-center mt-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"New task title\"\n                    value={newTaskTitle}\n                    onChange={(e) => setNewTaskTitle(e.target.value)}\n                    onKeyPress={(e) => handleKeyPress(e, priority.id)}\n                    className=\"flex-grow text-sm p-1 border rounded mr-2\"\n                    autoFocus\n                  />\n                  <button onClick={() => handleAddTask(priority.id)} className=\"text-green-500 hover:text-green-700\">\n                    <Plus className=\"w-5 h-5\" />\n                  </button>\n                  <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n                    <X className=\"w-5 h-5\" />\n                  </button>\n                </div>\n              ) : (\n                <button \n                  onClick={() => setAddingTaskForPriority(priority.id)} \n                  className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n                >\n                  <Plus className=\"w-4 h-4 mr-1\" /> Add task\n                </button>\n              )\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  ); */\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-semibold\",\n          children: [viewMode === 'today' ? \"Today's\" : \"This Week's\", \" Priorities\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center bg-gray-200 rounded-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('today'),\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('week'),\n            children: \"Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), priorities.map(priority => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md mb-6 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\",\n            placeholder: `Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`,\n            value: priority.title,\n            onChange: e => handlePriorityChange(priority.id, 'title', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\",\n          placeholder: \"Describe successful outcome\",\n          value: priority.outcome,\n          onChange: e => handlePriorityChange(priority.id, 'outcome', e.target.value),\n          rows: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: viewMode === 'today' ? today : 'week',\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [getTasksForPriority(priority.id).map((task, index) => renderTask(task, index)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), viewMode === 'today' && (addingTaskForPriority === priority.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New task title\",\n            value: newTaskTitle,\n            onChange: e => setNewTaskTitle(e.target.value),\n            onKeyPress: e => handleKeyPress(e, priority.id),\n            className: \"flex-grow text-sm p-1 border rounded mr-2\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddTask(priority.id),\n            className: \"text-green-500 hover:text-green-700\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAddingTaskForPriority(null),\n            className: \"text-red-500 hover:text-red-700 ml-2\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setAddingTaskForPriority(priority.id),\n          className: \"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            className: \"w-4 h-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 19\n          }, this), \" Add task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 17\n        }, this))]\n      }, priority.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 392,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklyPriorities, \"IsGhiu65dlkwEAoU4QAGCNHaW/g=\");\n_c = WeeklyPriorities;\nexport default WeeklyPriorities;\nvar _c;\n$RefreshReg$(_c, \"WeeklyPriorities\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","CheckCircle","Circle","Plus","X","ArrowRight","Trash2","Timer","GripVertical","jsxDEV","_jsxDEV","Fragment","_Fragment","WeeklyPriorities","priorities","setPriorities","tasks","setTasks","_s","addingTaskForPriority","setAddingTaskForPriority","newTaskTitle","setNewTaskTitle","viewMode","setViewMode","today","Date","toISOString","split","rollOverTasks","tomorrow","setDate","getDate","tomorrowString","prevTasks","todayTasks","unfinishedTasks","filter","task","status","now","endOfDay","getFullYear","getMonth","timeUntilEndOfDay","getTime","timerId","setTimeout","clearTimeout","console","log","handlePriorityChange","id","field","value","map","p","getTasksForPriority","priorityId","priority","toString","weekStart","getDay","weekEnd","Object","entries","date","taskDate","flatMap","dayTasks","handleAddTask","trim","newTask","title","completedPomodoros","handleKeyPress","event","key","handleTaskChange","taskId","toggleTaskStatus","deferTask","taskToDefer","find","deleteTask","getDayOfWeek","dateString","days","isToday","addPomodoro","onDragEnd","result","source","destination","sourceDate","droppableId","destDate","currentTasks","Array","isArray","error","newTasks","from","reorderedItem","splice","index","renderTask","draggableId","children","provided","snapshot","ref","innerRef","draggableProps","className","isDragging","dragHandleProps","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","target","disabled","type","placeholder","outcome","rows","droppableProps","onKeyPress","autoFocus","_c","$RefreshReg$"],"sources":["/Users/Rags/task-manager-app/src/components/WeeklyPriorities.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckCircle, Circle, Plus, X, ArrowRight, Trash2, Timer,GripVertical } from 'lucide-react';\n//import { data } from 'autoprefixer';\n\nconst WeeklyPriorities = ({ priorities, setPriorities, tasks, setTasks }) => {\n  const [addingTaskForPriority, setAddingTaskForPriority] = useState(null);\n  const [newTaskTitle, setNewTaskTitle] = useState(''); // added this new\n  const [viewMode, setViewMode] = useState('today'); // 'today' or 'week'\n\n  const today = new Date().toISOString().split('T')[0];\n\n  // Task rollover effect\n  useEffect(() => {\n    const rollOverTasks = () => {\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      const tomorrowString = tomorrow.toISOString().split('T')[0];\n\n      setTasks(prevTasks => {\n        const todayTasks = prevTasks[today] || [];\n        const unfinishedTasks = todayTasks.filter(task => task.status !== 'done');\n        \n        return {\n          ...prevTasks,\n          [tomorrowString]: [...(prevTasks[tomorrowString] || []), ...unfinishedTasks]\n        };\n      });\n    };\n\n    const now = new Date();\n    const endOfDay = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 23, 59, 59, 999);\n    const timeUntilEndOfDay = endOfDay.getTime() - now.getTime();\n\n    const timerId = setTimeout(rollOverTasks, timeUntilEndOfDay);\n\n    return () => clearTimeout(timerId);\n  }, [today, setTasks]);\n\n  // Logging effect for debugging\n  useEffect(() => {\n    console.log(\"current tasks:\", tasks);\n  }, [tasks]);\n\n  const handlePriorityChange = (id, field, value) => {\n    setPriorities(priorities =>\n      priorities.map(p => p.id === id ? { ...p, [field]: value } : p)\n    );\n  };\n\n  const getTasksForPriority = (priorityId) => {\n    if (viewMode === 'today') {\n      return (tasks[today] || []).filter(task => task.priority === priorityId.toString);\n    } else {\n      // Week view - get tasks from monday to sunday\n      const weekStart = new Date(today);\n      weekStart.setDate(weekStart.getDate() - weekStart.getDay() + 1);\n      const weekEnd = new Date(weekStart);\n      weekEnd.setDate(weekEnd.getDate() + 6);\n\n      return Object.entries(tasks)\n        .filter(([date]) => {\n          const taskDate = new Date(date);\n          return taskDate >= weekStart && taskDate <= weekEnd;\n        })\n        .flatMap(([date, dayTasks]) => \n          dayTasks.filter(task => task.priority === priorityId.toString)\n        );\n    }\n  };\n\n  /* DEPRECATED Modified to replace newTask state with newTaskTitle\n  const handleAddTask = (priorityId) => {\n    if (newTaskTitle.trim()) {\n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [today]: [\n          ...(prevTasks[today] || []),\n          {\n            id: Date.now().toString(),\n            title: newTaskTitle.trim(),\n            status: 'pending',\n            priority: priorityId, //removed toString() \n            date: today,\n            completedPomodoros: 0\n          }\n        ]\n      }));\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  }; */\n\n  const handleAddTask = (priorityId) => {\n    if (newTaskTitle.trim()) {\n      const newTask = {\n        id: Date.now().toString(),\n        title: newTaskTitle.trim(),\n        status: 'pending',\n        priority: priorityId.toString(),\n        date: today,\n        completedPomodoros: 0\n      };\n      \n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [today]: [...(prevTasks[today] || []), newTask]\n      }));\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n\n  // New function handleKeyPress to allow task creation with Enter\n  const handleKeyPress = (event, priorityId) => {\n    if (event.key === 'Enter') {\n      handleAddTask(priorityId);\n    }\n  };\n\n  const handleTaskChange = (taskId, date, field, value) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, [field]: value } : task\n      )\n    }));\n  };\n\n  const toggleTaskStatus = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, status: task.status === 'done' ? 'pending' : 'done' } : task\n      )\n    }));\n  };\n\n  const deferTask = (taskId, date) => {\n    const tomorrow = new Date(date);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const tomorrowString = tomorrow.toISOString().split('T')[0];\n\n    setTasks(prevTasks => {\n      const taskToDefer = prevTasks[date].find(task => task.id === taskId);\n      return {\n        ...prevTasks,\n        [date]: prevTasks[date].filter(task => task.id !== taskId),\n        [tomorrowString]: [...(prevTasks[tomorrowString] || []), { ...taskToDefer, date: tomorrowString, status: 'deferred' }]\n      };\n    });\n  };\n\n  const deleteTask = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, status: 'deleted' } : task\n      )\n    }));\n  };\n\n  const getDayOfWeek = (dateString) => {\n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const date = new Date(dateString);\n    return days[date.getDay()];\n  };\n\n  const isToday = (dateString) => {\n    return dateString === today;\n  };\n\n  // Adding a function to add a pomodoro\n  const addPomodoro = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, completedPomodoros: (task.completedPomodoros || 0) + 1 } : task\n      )\n    }));\n  };\n\n  // Modify this to correct errors with drag and drop\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n\n    // Dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    const sourceDate = source.droppableId;\n    const destDate = destination.droppableId; // dropped the split\n\n    // If the task was dropped in a different date, we don't allow it\n    if (sourceDate !== destDate) {\n      return;\n    }\n\n    // Add some console logging to debug\n    console.log('Current tasks state', tasks);\n    console.log('Source date:', sourceDate);\n\n    const currentTasks = tasks[sourceDate] || [];\n\n    if(!Array.isArray(currentTasks)) {\n      console.error('Tasks for current date are not an array:', currentTasks);\n      return;\n    }\n\n    const newTasks = Array.from(currentTasks);\n    const [reorderedItem] = newTasks.splice(source.index, 1);\n    newTasks.splice(destination.index, 0, reorderedItem);\n\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [sourceDate]: newTasks\n    }));\n  };\n\n  /* Modified to get pomodoros on the same line - replace with new draggable version\n  const renderTask = (task) => (\n    <div key={task.id} className=\"flex items-center text-sm mb-2\">\n      {task.status === 'done' ? (\n        <CheckCircle className=\"w-4 h-4 text-green-500 mr-2 flex-shrink-0\" />\n      ) : (\n        <button onClick={() => toggleTaskStatus(task.id, task.date)} className=\"mr-2 flex-shrink-0\">\n          <Circle className=\"w-4 h-4 text-gray-300\" />\n        </button>\n      )}\n      <input\n        value={task.title}\n        onChange={(e) => handleTaskChange(task.id, task.date, 'title', e.target.value)}\n        className={`flex-grow bg-transparent border-none focus:outline-none focus:ring-0 ${task.status === 'done' ? 'text-gray-500' : ''}`}\n        disabled={task.status === 'done'}\n      />\n      {task.completedPomodoros > 0 && (\n        <div className=\"flex items-center mr-2\">\n          <Timer className=\"w-4 h-4 text-red-500 mr-1\" />\n          <span className=\"text-xs text-gray-600\">{task.completedPomodoros}</span>\n        </div>\n      )}\n      {task.status !== 'done' && (\n        <>\n          <button onClick={() => addPomodoro(task.id, task.date)} className=\"ml-2 text-gray-400 hover:text-gray-600\">\n            <Plus className=\"w-4 h-4\" />\n          </button>\n          <button onClick={() => deferTask(task.id, task.date)} className=\"ml-2 text-blue-500 hover:text-blue-700\">\n            <ArrowRight className=\"w-4 h-4\" />\n          </button>\n          <button onClick={() => deleteTask(task.id, task.date)} className=\"ml-2 text-red-500 hover:text-red-700\">\n            <Trash2 className=\"w-4 h-4\" />\n          </button>\n        </>\n      )}\n      {viewMode === 'week' && (\n        <span className={`ml-2 text-xs ${isToday(task.date) ? 'bg-blue-500 text-white px-2 py-1 rounded-full' : 'text-gray-500'}`}>\n          {isToday(task.date) ? 'Today' : getDayOfWeek(task.date)}\n        </span>\n      )}\n    </div>\n  ); */\n\n  const renderTask = (task, index) => (\n    <Draggable key={task.id} draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          className={`flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`}\n        >\n          <div {...provided.dragHandleProps} className=\"mr-2 cursor-move\">\n            <GripVertical className=\"w-4 h-4 text-gray-400\" />\n          </div>\n          {task.status === 'done' ? (\n            <CheckCircle className=\"w-4 h-4 text-green-500 mr-2 flex-shrink-0\" />\n          ) : (\n            <button onClick={() => toggleTaskStatus(task.id, task.date)} className=\"mr-2 flex-shrink-0\">\n              <Circle className=\"w-4 h-4 text-gray-300\" />\n            </button>\n          )}\n          <input\n            value={task.title}\n            onChange={(e) => handleTaskChange(task.id, task.date, 'title', e.target.value)}\n            className={`flex-grow bg-transparent border-none focus:outline-none focus:ring-0 ${task.status === 'done' ? 'text-gray-500' : ''}`}\n            disabled={task.status === 'done'}\n          />\n          {task.completedPomodoros > 0 && (\n            <div className=\"flex items-center mr-2\">\n              <Timer className=\"w-4 h-4 text-red-500 mr-1\" />\n              <span className=\"text-xs text-gray-600\">{task.completedPomodoros}</span>\n            </div>\n          )}\n          {task.status !== 'done' && (\n            <>\n              <button onClick={() => addPomodoro(task.id, task.date)} className=\"ml-2 text-gray-400 hover:text-gray-600\">\n                <Plus className=\"w-4 h-4\" />\n              </button>\n              <button onClick={() => deferTask(task.id, task.date)} className=\"ml-2 text-blue-500 hover:text-blue-700\">\n                <ArrowRight className=\"w-4 h-4\" />\n              </button>\n              <button onClick={() => deleteTask(task.id, task.date)} className=\"ml-2 text-red-500 hover:text-red-700\">\n                <Trash2 className=\"w-4 h-4\" />\n              </button>\n            </>\n          )}\n          {viewMode === 'week' && (\n            <span className={`ml-2 text-xs ${isToday(task.date) ? 'bg-blue-500 text-white px-2 py-1 rounded-full' : 'text-gray-500'}`}>\n              {isToday(task.date) ? 'Today' : getDayOfWeek(task.date)}\n            </span>\n          )}\n        </div>\n      )}\n    </Draggable>\n  );\n\n  /* OLD redo section with changes, also to add draggable features\n  return (\n    <div className=\"max-w-4xl mx-auto p-4\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-semibold\">{viewMode === 'today' ? \"Today's\" : \"This Week's\"} Priorities</h1>\n        <div className=\"flex items-center bg-gray-200 rounded-full\">\n          <button\n            className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n            onClick={() => setViewMode('today')}\n          >\n            Today\n          </button>\n          <button\n            className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n            onClick={() => setViewMode('week')}\n          >\n            Week\n          </button>\n        </div>\n      </div>\n      {priorities.map((priority) => (\n        <div key={priority.id} className=\"bg-white rounded-lg shadow-md mb-6 p-4\">\n          <div className=\"flex items-center mb-2\">\n            <span className={`w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`}></span>\n            <input\n              className=\"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\"\n              placeholder={`Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`}\n              value={priority.title}\n              onChange={(e) => handlePriorityChange(priority.id, 'title', e.target.value)}\n            />\n          </div>\n          <textarea\n            className=\"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\"\n            placeholder=\"Describe successful outcome\"\n            value={priority.outcome}\n            onChange={(e) => handlePriorityChange(priority.id, 'outcome', e.target.value)}\n            rows=\"2\"\n          />\n             <div className=\"mt-2\">\n            {getTasksForPriority(priority.id).map(renderTask)}\n            {viewMode === 'today' && (\n              addingTaskForPriority === priority.id ? (\n                <div className=\"flex items-center mt-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"New task title\"\n                    value={newTaskTitle}\n                    onChange={(e) => setNewTaskTitle(e.target.value)}\n                    onKeyPress={(e) => handleKeyPress(e, priority.id)}\n                    className=\"flex-grow text-sm p-1 border rounded mr-2\"\n                    autoFocus\n                  />\n                  <button onClick={() => handleAddTask(priority.id)} className=\"text-green-500 hover:text-green-700\">\n                    <Plus className=\"w-5 h-5\" />\n                  </button>\n                  <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n                    <X className=\"w-5 h-5\" />\n                  </button>\n                </div>\n              ) : (\n                <button \n                  onClick={() => setAddingTaskForPriority(priority.id)} \n                  className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n                >\n                  <Plus className=\"w-4 h-4 mr-1\" /> Add task\n                </button>\n              )\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  ); */\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"max-w-4xl mx-auto p-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-2xl font-semibold\">{viewMode === 'today' ? \"Today's\" : \"This Week's\"} Priorities</h1>\n          <div className=\"flex items-center bg-gray-200 rounded-full\">\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('today')}\n            >\n              Today\n            </button>\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('week')}\n            >\n              Week\n            </button>\n          </div>\n        </div>\n        {priorities.map((priority) => (\n          <div key={priority.id} className=\"bg-white rounded-lg shadow-md mb-6 p-4\">\n            <div className=\"flex items-center mb-2\">\n              <span className={`w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`}></span>\n              <input\n                className=\"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\"\n                placeholder={`Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`}\n                value={priority.title}\n                onChange={(e) => handlePriorityChange(priority.id, 'title', e.target.value)}\n              />\n            </div>\n            <textarea\n              className=\"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\"\n              placeholder=\"Describe successful outcome\"\n              value={priority.outcome}\n              onChange={(e) => handlePriorityChange(priority.id, 'outcome', e.target.value)}\n              rows=\"2\"\n            /> \n            <Droppable droppableId={viewMode === 'today' ? today : 'week'}>\n              {(provided) => (\n                <div ref={provided.innerRef} {...provided.droppableProps}>\n                  {getTasksForPriority(priority.id).map((task, index) => renderTask(task, index))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n            {viewMode === 'today' && (\n              addingTaskForPriority === priority.id ? (\n                <div className=\"flex items-center mt-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"New task title\"\n                    value={newTaskTitle}\n                    onChange={(e) => setNewTaskTitle(e.target.value)}\n                    onKeyPress={(e) => handleKeyPress(e, priority.id)}\n                    className=\"flex-grow text-sm p-1 border rounded mr-2\"\n                    autoFocus\n                  />\n                  <button onClick={() => handleAddTask(priority.id)} className=\"text-green-500 hover:text-green-700\">\n                    <Plus className=\"w-5 h-5\" />\n                  </button>\n                  <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n                    <X className=\"w-5 h-5\" />\n                  </button>\n                </div>\n              ) : (\n                <button \n                  onClick={() => setAddingTaskForPriority(priority.id)} \n                  className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n                >\n                  <Plus className=\"w-4 h-4 mr-1\" /> Add task\n                </button>\n              )\n            )}\n          </div>\n        ))}\n      </div>\n    </DragDropContext>\n  );\n\n};\n\nexport default WeeklyPriorities;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}