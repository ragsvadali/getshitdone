{"ast":null,"code":"var _jsxFileName = \"/Users/Rags/task-manager-app/src/components/DailyTasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { PlusCircle, CheckCircle, Clock, XCircle, GripVertical, Edit2, Trash2 } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCurrentDate = () => new Date().toISOString().split('T')[0];\nconst DailyTasks = ({\n  tasks,\n  setTasks,\n  priorities\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(getCurrentDate());\n  const [newTask, setNewTask] = useState({\n    title: '',\n    estimatedPomodoros: 0,\n    actualPomodoros: 0,\n    status: 'pending',\n    priority: ''\n  });\n\n  // ... (keep addTask, updateTask, deleteTask functions as they were)\n\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    const newTasks = Array.from(tasks[selectedDate] || []);\n    const [reorderedItem] = newTasks.splice(source.index, 1);\n    newTasks.splice(destination.index, 0, reorderedItem);\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [selectedDate]: newTasks\n    }));\n  };\n  const getPriorityTitle = priorityId => {\n    const priority = priorities.find(p => p.id.toString() === priorityId);\n    return priority ? priority.title : 'Unaligned';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-semibold mb-6\",\n      children: \"Daily Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"taskList\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [(tasks[selectedDate] || []).map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: task.id.toString(),\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              className: `card mb-4 ${snapshot.isDragging ? 'shadow-lg' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  ...provided.dragHandleProps,\n                  className: \"mr-2 cursor-move p-1 hover:bg-gray-100 rounded\",\n                  children: /*#__PURE__*/_jsxDEV(GripVertical, {\n                    className: \"text-gray-400\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-semibold flex-grow\",\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 rounded-full text-xs font-semibold \n                          ${task.status === 'done' ? 'status-done' : task.status === 'defer' ? 'status-defer' : task.status === 'delete' ? 'status-delete' : 'status-pending'}`,\n                  children: task.status.charAt(0).toUpperCase() + task.status.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyTasks, \"hcwVz8z7HQ5++Dxxm1RWfFdeIws=\");\n_c = DailyTasks;\nexport default DailyTasks;\nvar _c;\n$RefreshReg$(_c, \"DailyTasks\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","PlusCircle","CheckCircle","Clock","XCircle","GripVertical","Edit2","Trash2","jsxDEV","_jsxDEV","getCurrentDate","Date","toISOString","split","DailyTasks","tasks","setTasks","priorities","_s","selectedDate","setSelectedDate","newTask","setNewTask","title","estimatedPomodoros","actualPomodoros","status","priority","onDragEnd","result","destination","source","draggableId","droppableId","index","newTasks","Array","from","reorderedItem","splice","prevTasks","getPriorityTitle","priorityId","find","p","id","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","provided","droppableProps","ref","innerRef","map","task","snapshot","draggableProps","isDragging","dragHandleProps","charAt","toUpperCase","slice","placeholder","_c","$RefreshReg$"],"sources":["/Users/Rags/task-manager-app/src/components/DailyTasks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { PlusCircle, CheckCircle, Clock, XCircle, GripVertical, Edit2, Trash2 } from 'lucide-react';\n\nconst getCurrentDate = () => new Date().toISOString().split('T')[0];\n\nconst DailyTasks = ({ tasks, setTasks, priorities }) => {\n  const [selectedDate, setSelectedDate] = useState(getCurrentDate());\n  const [newTask, setNewTask] = useState({ title: '', estimatedPomodoros: 0, actualPomodoros: 0, status: 'pending', priority: '' });\n\n  // ... (keep addTask, updateTask, deleteTask functions as they were)\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    const newTasks = Array.from(tasks[selectedDate] || []);\n    const [reorderedItem] = newTasks.splice(source.index, 1);\n    newTasks.splice(destination.index, 0, reorderedItem);\n\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [selectedDate]: newTasks\n    }));\n  };\n\n  const getPriorityTitle = (priorityId) => {\n    const priority = priorities.find(p => p.id.toString() === priorityId);\n    return priority ? priority.title : 'Unaligned';\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto\">\n      <h1 className=\"text-2xl font-semibold mb-6\">Daily Tasks</h1>\n      {/* ... (keep the date input and new task form as they were) */}\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"taskList\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {(tasks[selectedDate] || []).map((task, index) => (\n                <Draggable key={task.id} draggableId={task.id.toString()} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      className={`card mb-4 ${snapshot.isDragging ? 'shadow-lg' : ''}`}\n                    >\n                      <div className=\"flex items-center mb-2\">\n                        <div {...provided.dragHandleProps} className=\"mr-2 cursor-move p-1 hover:bg-gray-100 rounded\">\n                          <GripVertical className=\"text-gray-400\" />\n                        </div>\n                        <h3 className=\"text-lg font-semibold flex-grow\">{task.title}</h3>\n                        <span className={`px-2 py-1 rounded-full text-xs font-semibold \n                          ${task.status === 'done' ? 'status-done' : \n                            task.status === 'defer' ? 'status-defer' : \n                            task.status === 'delete' ? 'status-delete' : 'status-pending'}`}>\n                          {task.status.charAt(0).toUpperCase() + task.status.slice(1)}\n                        </span>\n                      </div>\n                      {/* ... (keep the rest of the task card content as it was) */}\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default DailyTasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}