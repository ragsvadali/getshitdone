{"ast":null,"code":"var _jsxFileName = \"/Users/Rags/task-manager-app/src/components/WeeklyPriorities.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckCircle, Circle, Plus, ArrowRight, Trash2, Timer, GripVertical, X } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeeklyPriorities = ({\n  priorities,\n  setPriorities,\n  tasks,\n  setTasks,\n  backlogTasks,\n  setBacklogTasks,\n  addTaskToToday\n}) => {\n  _s();\n  const [viewMode, setViewMode] = useState('today');\n  const [addingTaskForPriority, setAddingTaskForPriority] = useState(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  //const [viewMode, setViewMode] = useState('today');\n\n  const today = new Date().toISOString().split('T')[0];\n  const getTasksForPriority = (priorityId, date) => {\n    return (tasks[date] || []).filter(task => task && task.priority === priorityId.toString());\n  };\n  const handleAddTask = priorityId => {\n    if (newTaskTitle.trim()) {\n      const newTask = {\n        id: Date.now().toString(),\n        title: newTaskTitle.trim(),\n        status: 'pending',\n        priority: priorityId.toString(),\n        date: today,\n        completedPomodoros: 0\n      };\n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [today]: [...(prevTasks[today] || []), newTask]\n      }));\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n  const handleKeyPress = (event, priorityId) => {\n    if (event.key === 'Enter') {\n      handleAddTask(priorityId);\n    }\n  };\n  const toggleTaskStatus = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        status: task.status === 'done' ? 'pending' : 'done'\n      } : task)\n    }));\n  };\n  const deferTask = (taskId, date) => {\n    const tomorrow = new Date(date);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const tomorrowString = tomorrow.toISOString().split('T')[0];\n    setTasks(prevTasks => {\n      const taskToDefer = prevTasks[date].find(task => task.id === taskId);\n      return {\n        ...prevTasks,\n        [date]: prevTasks[date].filter(task => task.id !== taskId),\n        [tomorrowString]: [...(prevTasks[tomorrowString] || []), {\n          ...taskToDefer,\n          date: tomorrowString\n        }]\n      };\n    });\n  };\n  const deleteTask = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].filter(task => task.id !== taskId)\n    }));\n  };\n  const addPomodoro = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        completedPomodoros: (task.completedPomodoros || 0) + 1\n      } : task)\n    }));\n  };\n  const renderBacklogTasks = () => {\n    return /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"backlog\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [backlogTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: task.id,\n          index: index,\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            className: `flex items-center bg-white p-3 mb-2 rounded shadow ${snapshot.isDragging ? 'bg-gray-100' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(GripVertical, {\n              className: \"w-4 h-4 text-gray-400 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"flex-grow\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => {\n                  addTaskToToday(task, e.target.value);\n                  setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id));\n                },\n                className: \"mr-2 p-1 border rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Schedule to...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 25\n                }, this), priorities.map(priority => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: priority.id,\n                  children: priority.title || `Priority ${priority.id}`\n                }, priority.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 27\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id)),\n                className: \"text-red-500 hover:text-red-700\",\n                children: /*#__PURE__*/_jsxDEV(Trash2, {\n                  className: \"w-5 h-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  };\n\n  /* this version needs to be changed in order to also accomodate reordering backlog tasks\n  const onDragEnd = (result) => {\n    // this was there when we removed reorder from Week, now we are allowing in backlog\n    // if (viewMode !== 'today') return;\n  \n    const { source, destination } = result;\n  \n    if (!destination) return;\n  \n    // Ensure the source and destination are within the same priority\n    if (source.droppableId !== destination.droppableId) {\n      console.log('Attempted to move task between priorities. This is not allowed.');\n      return;\n    }\n  \n    console.log('Drag result:', result);\n  \n    setTasks(prevTasks => {\n      console.log('Previous tasks state:', prevTasks);\n  \n      const currentTasks = prevTasks[today] || [];\n      console.log('Current tasks for today:', currentTasks);\n  \n      const priorityTasks = currentTasks.filter(task => task.priority === source.droppableId);\n      console.log('Tasks for the current priority:', priorityTasks);\n  \n      const newPriorityTasks = Array.from(priorityTasks);\n      const [reorderedItem] = newPriorityTasks.splice(source.index, 1);\n      newPriorityTasks.splice(destination.index, 0, reorderedItem);\n      console.log('Reordered priority tasks:', newPriorityTasks);\n  \n      const newTasks = currentTasks.reduce((acc, task) => {\n        if (task.priority !== source.droppableId) {\n          acc.push(task);\n        } else {\n          const newTask = newPriorityTasks.shift();\n          if (newTask) acc.push(newTask);\n        }\n        return acc;\n      }, []);\n  \n      console.log('New tasks after reordering:', newTasks);\n  \n      const updatedTasks = {\n        ...prevTasks,\n        [today]: newTasks\n      };\n  \n      console.log('Updated tasks state:', updatedTasks);\n  \n      return updatedTasks;\n    });\n  }; */\n\n  // Version of onDragEng to accomodate drag & drop in backlog\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (viewMode === 'backlog') {\n      // Handle reordering in backlog using reduce\n      setBacklogTasks(prevTasks => {\n        const newTasks = prevTasks.reduce((acc, task, index) => {\n          if (index === source.index) {\n            return acc; // Skip this index as we're moving this task\n          }\n          if (index === destination.index) {\n            // Insert the dragged task before the task at the destination index\n            acc.push(prevTasks[source.index]);\n            acc.push(task);\n          } else {\n            acc.push(task);\n          }\n          return acc;\n        }, []);\n\n        // If the task was moved to the end, add it here\n        if (destination.index === prevTasks.length) {\n          newTasks.push(prevTasks[source.index]);\n        }\n        return newTasks;\n      });\n    } else if (viewMode === 'today') {\n      // Handle reordering in today's tasks\n      if (source.droppableId !== destination.droppableId) {\n        console.log('Attempted to move task between priorities. This is not allowed.');\n        return;\n      }\n      const today = new Date().toISOString().split('T')[0];\n      setTasks(prevTasks => {\n        const currentTasks = prevTasks[today] || [];\n        const priorityTasks = currentTasks.filter(task => task.priority === source.droppableId);\n        const newPriorityTasks = priorityTasks.reduce((acc, task, index) => {\n          if (index === source.index) {\n            return acc; // Skip this index as we're moving this task\n          }\n          if (index === destination.index) {\n            // Insert the dragged task before the task at the destination index\n            acc.push(priorityTasks[source.index]);\n            acc.push(task);\n          } else {\n            acc.push(task);\n          }\n          return acc;\n        }, []);\n\n        // If the task was moved to the end, add it here\n        if (destination.index === priorityTasks.length) {\n          newPriorityTasks.push(priorityTasks[source.index]);\n        }\n        const newTasks = currentTasks.reduce((acc, task) => {\n          if (task.priority === source.droppableId) {\n            const newTask = newPriorityTasks.shift();\n            acc.push(newTask || task);\n          } else {\n            acc.push(task);\n          }\n          return acc;\n        }, []);\n        return {\n          ...prevTasks,\n          [today]: newTasks\n        };\n      });\n    }\n  };\n  const renderTask = (task, index) => {\n    if (!task) return null;\n    const handleToggleStatus = () => {\n      toggleTaskStatus(task.id, task.date);\n    };\n    const taskContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggleStatus,\n        className: \"mr-2 flex-shrink-0\",\n        children: task.status === 'done' ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-4 h-4 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Circle, {\n          className: \"w-4 h-4 text-gray-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `flex-grow ${task.status === 'done' ? 'text-gray-500 line-through' : ''}`,\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), task.completedPomodoros > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-xs text-gray-600 ml-2\",\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          className: \"w-4 h-4 inline-block mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), task.completedPomodoros]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n    if (viewMode === 'today') {\n      return /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: task.id,\n        index: index,\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          className: `flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(GripVertical, {\n            className: \"w-4 h-4 text-gray-400 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), taskContent, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center ml-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addPomodoro(task.id, task.date),\n              className: \"text-gray-400 hover:text-gray-600 mr-2\",\n              children: /*#__PURE__*/_jsxDEV(Plus, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deferTask(task.id, task.date),\n              className: \"text-blue-500 hover:text-blue-700 mr-2\",\n              children: /*#__PURE__*/_jsxDEV(ArrowRight, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(task.id, task.date),\n              className: \"text-red-500 hover:text-red-700\",\n              children: /*#__PURE__*/_jsxDEV(Trash2, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)\n      }, `${task.id}-${task.priority}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this);\n    } else {\n      const isToday = task.date === today;\n      const taskDate = new Date(task.date);\n      const dayOfWeek = taskDate.toLocaleDateString('en-US', {\n        weekday: 'short'\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center text-sm mb-2\",\n        children: [taskContent, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-xs ml-2 ${isToday ? 'bg-blue-500 text-white px-2 py-1 rounded-full' : 'text-gray-500'}`,\n          children: isToday ? 'Today' : dayOfWeek\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, `${task.id}-${task.priority}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const renderWeekView = priority => {\n    const startOfWeek = new Date(today);\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay());\n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(endOfWeek.getDate() + 6);\n    const weekTasks = Object.entries(tasks).filter(([date]) => {\n      const taskDate = new Date(date);\n      return taskDate >= startOfWeek && taskDate <= endOfWeek;\n    }).flatMap(([date, dateTasks]) => dateTasks.filter(task => task && task.priority === priority.id.toString())).sort((a, b) => new Date(a.date) - new Date(b.date));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: weekTasks.map((task, index) => renderTask(task, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-semibold\",\n          children: \"Get Shit Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center bg-gray-200 rounded-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('today'),\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('week'),\n            children: \"Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'backlog' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('backlog'),\n            children: \"Backlog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), viewMode === 'backlog' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newTaskTitle,\n            onChange: e => setNewTaskTitle(e.target.value),\n            onKeyPress: e => {\n              if (e.key === 'Enter' && newTaskTitle.trim()) {\n                setBacklogTasks(prev => [...prev, {\n                  id: Date.now().toString(),\n                  title: newTaskTitle.trim()\n                }]);\n                setNewTaskTitle('');\n              }\n            },\n            placeholder: \"Add a new task to backlog\",\n            className: \"flex-grow p-2 border rounded-l\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (newTaskTitle.trim()) {\n                setBacklogTasks(prev => [...prev, {\n                  id: Date.now().toString(),\n                  title: newTaskTitle.trim()\n                }]);\n                setNewTaskTitle('');\n              }\n            },\n            className: \"bg-blue-500 text-white p-2 rounded-r\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), renderBacklogTasks()]\n      }, void 0, true) : priorities.map(priority => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md mb-6 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\",\n            placeholder: `Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`,\n            value: priority.title,\n            onChange: e => setPriorities(prev => prev.map(p => p.id === priority.id ? {\n              ...p,\n              title: e.target.value\n            } : p))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\",\n          placeholder: \"Describe successful outcome\",\n          value: priority.outcome,\n          onChange: e => setPriorities(prev => prev.map(p => p.id === priority.id ? {\n            ...p,\n            outcome: e.target.value\n          } : p)),\n          rows: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 15\n        }, this), viewMode === 'today' ? /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: priority.id.toString(),\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [getTasksForPriority(priority.id, today).map((task, index) => renderTask(task, index)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 17\n        }, this) : renderWeekView(priority), viewMode === 'today' && (addingTaskForPriority === priority.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New task title\",\n            value: newTaskTitle,\n            onChange: e => setNewTaskTitle(e.target.value),\n            onKeyPress: e => handleKeyPress(e, priority.id),\n            className: \"flex-grow text-sm p-1 border rounded mr-2\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddTask(priority.id),\n            className: \"text-green-500 hover:text-green-700\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAddingTaskForPriority(null),\n            className: \"text-red-500 hover:text-red-700 ml-2\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setAddingTaskForPriority(priority.id),\n          className: \"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            className: \"w-4 h-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 21\n          }, this), \" Add task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 19\n        }, this))]\n      }, priority.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklyPriorities, \"g05gm70v+orCRitiiEpEtcROjp8=\");\n_c = WeeklyPriorities;\nexport default WeeklyPriorities;\nvar _c;\n$RefreshReg$(_c, \"WeeklyPriorities\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","CheckCircle","Circle","Plus","ArrowRight","Trash2","Timer","GripVertical","X","jsxDEV","_jsxDEV","Fragment","_Fragment","WeeklyPriorities","priorities","setPriorities","tasks","setTasks","backlogTasks","setBacklogTasks","addTaskToToday","_s","viewMode","setViewMode","addingTaskForPriority","setAddingTaskForPriority","newTaskTitle","setNewTaskTitle","today","Date","toISOString","split","getTasksForPriority","priorityId","date","filter","task","priority","toString","handleAddTask","trim","newTask","id","now","title","status","completedPomodoros","prevTasks","handleKeyPress","event","key","toggleTaskStatus","taskId","map","deferTask","tomorrow","setDate","getDate","tomorrowString","taskToDefer","find","deleteTask","addPomodoro","renderBacklogTasks","droppableId","children","provided","droppableProps","ref","innerRef","index","draggableId","snapshot","draggableProps","dragHandleProps","className","isDragging","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","t","onClick","placeholder","onDragEnd","result","source","destination","newTasks","reduce","acc","push","length","console","log","currentTasks","priorityTasks","newPriorityTasks","shift","renderTask","handleToggleStatus","taskContent","isToday","taskDate","dayOfWeek","toLocaleDateString","weekday","renderWeekView","startOfWeek","getDay","endOfWeek","weekTasks","Object","entries","flatMap","dateTasks","sort","a","b","type","onKeyPress","prev","p","outcome","rows","autoFocus","_c","$RefreshReg$"],"sources":["/Users/Rags/task-manager-app/src/components/WeeklyPriorities.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckCircle, Circle, Plus, ArrowRight, Trash2, Timer, GripVertical, X } from 'lucide-react';\n\nconst WeeklyPriorities = ({ priorities, setPriorities, tasks, setTasks, backlogTasks, setBacklogTasks, addTaskToToday }) => {\n  const [viewMode, setViewMode] = useState('today');\n  const [addingTaskForPriority, setAddingTaskForPriority] = useState(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  //const [viewMode, setViewMode] = useState('today');\n\n  const today = new Date().toISOString().split('T')[0];\n\n  const getTasksForPriority = (priorityId, date) => {\n    return (tasks[date] || []).filter(task => task && task.priority === priorityId.toString());\n  };\n\n  const handleAddTask = (priorityId) => {\n    if (newTaskTitle.trim()) {\n      const newTask = {\n        id: Date.now().toString(),\n        title: newTaskTitle.trim(),\n        status: 'pending',\n        priority: priorityId.toString(),\n        date: today,\n        completedPomodoros: 0\n      };\n      \n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [today]: [...(prevTasks[today] || []), newTask]\n      }));\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n\n  const handleKeyPress = (event, priorityId) => {\n    if (event.key === 'Enter') {\n      handleAddTask(priorityId);\n    }\n  };\n\n  const toggleTaskStatus = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, status: task.status === 'done' ? 'pending' : 'done' } : task\n      )\n    }));\n  };\n\n  const deferTask = (taskId, date) => {\n    const tomorrow = new Date(date);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const tomorrowString = tomorrow.toISOString().split('T')[0];\n\n    setTasks(prevTasks => {\n      const taskToDefer = prevTasks[date].find(task => task.id === taskId);\n      return {\n        ...prevTasks,\n        [date]: prevTasks[date].filter(task => task.id !== taskId),\n        [tomorrowString]: [...(prevTasks[tomorrowString] || []), { ...taskToDefer, date: tomorrowString }]\n      };\n    });\n  };\n\n  const deleteTask = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].filter(task => task.id !== taskId)\n    }));\n  };\n\n  const addPomodoro = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, completedPomodoros: (task.completedPomodoros || 0) + 1 } : task\n      )\n    }));\n  };\n\n \n  const renderBacklogTasks = () => {\n    return (\n      <Droppable droppableId=\"backlog\">\n        {(provided) => (\n          <div {...provided.droppableProps} ref={provided.innerRef}>\n            {backlogTasks.map((task, index) => (\n              <Draggable key={task.id} draggableId={task.id} index={index}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    className={`flex items-center bg-white p-3 mb-2 rounded shadow ${\n                      snapshot.isDragging ? 'bg-gray-100' : ''\n                    }`}\n                  >\n                    <GripVertical className=\"w-4 h-4 text-gray-400 mr-2\" />\n                    <span className=\"flex-grow\">{task.title}</span>\n                    <div className=\"flex items-center\">\n                      <select\n                        onChange={(e) => {\n                          addTaskToToday(task, e.target.value);\n                          setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id));\n                        }}\n                        className=\"mr-2 p-1 border rounded\"\n                      >\n                        <option value=\"\">Schedule to...</option>\n                        {priorities.map((priority) => (\n                          <option key={priority.id} value={priority.id}>\n                            {priority.title || `Priority ${priority.id}`}\n                          </option>\n                        ))}\n                      </select>\n                      <button\n                        onClick={() => setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id))}\n                        className=\"text-red-500 hover:text-red-700\"\n                      >\n                        <Trash2 className=\"w-5 h-5\" />\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    );\n  }; \n\n  /* this version needs to be changed in order to also accomodate reordering backlog tasks\n  const onDragEnd = (result) => {\n    // this was there when we removed reorder from Week, now we are allowing in backlog\n    // if (viewMode !== 'today') return;\n  \n    const { source, destination } = result;\n  \n    if (!destination) return;\n  \n    // Ensure the source and destination are within the same priority\n    if (source.droppableId !== destination.droppableId) {\n      console.log('Attempted to move task between priorities. This is not allowed.');\n      return;\n    }\n  \n    console.log('Drag result:', result);\n  \n    setTasks(prevTasks => {\n      console.log('Previous tasks state:', prevTasks);\n  \n      const currentTasks = prevTasks[today] || [];\n      console.log('Current tasks for today:', currentTasks);\n  \n      const priorityTasks = currentTasks.filter(task => task.priority === source.droppableId);\n      console.log('Tasks for the current priority:', priorityTasks);\n  \n      const newPriorityTasks = Array.from(priorityTasks);\n      const [reorderedItem] = newPriorityTasks.splice(source.index, 1);\n      newPriorityTasks.splice(destination.index, 0, reorderedItem);\n      console.log('Reordered priority tasks:', newPriorityTasks);\n  \n      const newTasks = currentTasks.reduce((acc, task) => {\n        if (task.priority !== source.droppableId) {\n          acc.push(task);\n        } else {\n          const newTask = newPriorityTasks.shift();\n          if (newTask) acc.push(newTask);\n        }\n        return acc;\n      }, []);\n  \n      console.log('New tasks after reordering:', newTasks);\n  \n      const updatedTasks = {\n        ...prevTasks,\n        [today]: newTasks\n      };\n  \n      console.log('Updated tasks state:', updatedTasks);\n  \n      return updatedTasks;\n    });\n  }; */\n\n  // Version of onDragEng to accomodate drag & drop in backlog\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n  \n    if (!destination) {\n      return;\n    }\n  \n    if (viewMode === 'backlog') {\n      // Handle reordering in backlog using reduce\n      setBacklogTasks(prevTasks => {\n        const newTasks = prevTasks.reduce((acc, task, index) => {\n          if (index === source.index) {\n            return acc; // Skip this index as we're moving this task\n          }\n          if (index === destination.index) {\n            // Insert the dragged task before the task at the destination index\n            acc.push(prevTasks[source.index]);\n            acc.push(task);\n          } else {\n            acc.push(task);\n          }\n          return acc;\n        }, []);\n  \n        // If the task was moved to the end, add it here\n        if (destination.index === prevTasks.length) {\n          newTasks.push(prevTasks[source.index]);\n        }\n  \n        return newTasks;\n      });\n    } else if (viewMode === 'today') {\n      // Handle reordering in today's tasks\n      if (source.droppableId !== destination.droppableId) {\n        console.log('Attempted to move task between priorities. This is not allowed.');\n        return;\n      }\n  \n      const today = new Date().toISOString().split('T')[0];\n      setTasks(prevTasks => {\n        const currentTasks = prevTasks[today] || [];\n        const priorityTasks = currentTasks.filter(task => task.priority === source.droppableId);\n        \n        const newPriorityTasks = priorityTasks.reduce((acc, task, index) => {\n          if (index === source.index) {\n            return acc; // Skip this index as we're moving this task\n          }\n          if (index === destination.index) {\n            // Insert the dragged task before the task at the destination index\n            acc.push(priorityTasks[source.index]);\n            acc.push(task);\n          } else {\n            acc.push(task);\n          }\n          return acc;\n        }, []);\n  \n        // If the task was moved to the end, add it here\n        if (destination.index === priorityTasks.length) {\n          newPriorityTasks.push(priorityTasks[source.index]);\n        }\n  \n        const newTasks = currentTasks.reduce((acc, task) => {\n          if (task.priority === source.droppableId) {\n            const newTask = newPriorityTasks.shift();\n            acc.push(newTask || task);\n          } else {\n            acc.push(task);\n          }\n          return acc;\n        }, []);\n  \n        return {\n          ...prevTasks,\n          [today]: newTasks\n        };\n      });\n    }\n  };\n\n  const renderTask = (task, index) => {\n    if (!task) return null;\n  \n    const handleToggleStatus = () => {\n      toggleTaskStatus(task.id, task.date);\n    };\n  \n    const taskContent = (\n      <>\n        <button onClick={handleToggleStatus} className=\"mr-2 flex-shrink-0\">\n          {task.status === 'done' ? (\n            <CheckCircle className=\"w-4 h-4 text-green-500\" />\n          ) : (\n            <Circle className=\"w-4 h-4 text-gray-300\" />\n          )}\n        </button>\n        <span className={`flex-grow ${task.status === 'done' ? 'text-gray-500 line-through' : ''}`}>\n          {task.title}\n        </span>\n        {task.completedPomodoros > 0 && (\n          <span className=\"text-xs text-gray-600 ml-2\">\n            <Timer className=\"w-4 h-4 inline-block mr-1\" />\n            {task.completedPomodoros}\n          </span>\n        )}\n      </>\n    );\n  \n    if (viewMode === 'today') {\n      return (\n        <Draggable key={`${task.id}-${task.priority}`} draggableId={task.id} index={index}>\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              className={`flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`}\n            >\n              <GripVertical className=\"w-4 h-4 text-gray-400 mr-2\" />\n              {taskContent}\n              <div className=\"flex items-center ml-2\">\n                <button onClick={() => addPomodoro(task.id, task.date)} className=\"text-gray-400 hover:text-gray-600 mr-2\">\n                  <Plus className=\"w-4 h-4\" />\n                </button>\n                <button onClick={() => deferTask(task.id, task.date)} className=\"text-blue-500 hover:text-blue-700 mr-2\">\n                  <ArrowRight className=\"w-4 h-4\" />\n                </button>\n                <button onClick={() => deleteTask(task.id, task.date)} className=\"text-red-500 hover:text-red-700\">\n                  <Trash2 className=\"w-4 h-4\" />\n                </button>\n              </div>\n            </div>\n          )}\n        </Draggable>\n      );\n    } else {\n      const isToday = task.date === today;\n      const taskDate = new Date(task.date);\n      const dayOfWeek = taskDate.toLocaleDateString('en-US', { weekday: 'short' });\n      \n      return (\n        <div key={`${task.id}-${task.priority}`} className=\"flex items-center text-sm mb-2\">\n          {taskContent}\n          <span className={`text-xs ml-2 ${isToday ? 'bg-blue-500 text-white px-2 py-1 rounded-full' : 'text-gray-500'}`}>\n            {isToday ? 'Today' : dayOfWeek}\n          </span>\n        </div>\n      );\n    }\n  };\n  \n  const renderWeekView = (priority) => {\n    const startOfWeek = new Date(today);\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay());\n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(endOfWeek.getDate() + 6);\n  \n    const weekTasks = Object.entries(tasks)\n      .filter(([date]) => {\n        const taskDate = new Date(date);\n        return taskDate >= startOfWeek && taskDate <= endOfWeek;\n      })\n      .flatMap(([date, dateTasks]) => \n        dateTasks.filter(task => task && task.priority === priority.id.toString())\n      )\n      .sort((a, b) => new Date(a.date) - new Date(b.date));\n  \n    return (\n      <div>\n        {weekTasks.map((task, index) => renderTask(task, index))}\n      </div>\n    );\n  };\n\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"max-w-4xl mx-auto p-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-2xl font-semibold\">Get Shit Done</h1>\n          <div className=\"flex items-center bg-gray-200 rounded-full\">\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('today')}\n            >\n              Today\n            </button>\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('week')}\n            >\n              Week\n            </button>\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'backlog' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('backlog')}\n            >\n              Backlog\n            </button>\n          </div>\n        </div>\n\n        {viewMode === 'backlog' ? (\n          <>\n            <div className=\"mb-4 flex\">\n              <input\n                type=\"text\"\n                value={newTaskTitle}\n                onChange={(e) => setNewTaskTitle(e.target.value)}\n                onKeyPress={(e) => {\n                  if (e.key === 'Enter' && newTaskTitle.trim()) {\n                    setBacklogTasks(prev => [...prev, { id: Date.now().toString(), title: newTaskTitle.trim() }]);\n                    setNewTaskTitle('');\n                  }\n                }}\n                placeholder=\"Add a new task to backlog\"\n                className=\"flex-grow p-2 border rounded-l\"\n              />\n              <button \n                onClick={() => {\n                  if (newTaskTitle.trim()) {\n                    setBacklogTasks(prev => [...prev, { id: Date.now().toString(), title: newTaskTitle.trim() }]);\n                    setNewTaskTitle('');\n                  }\n                }}\n                className=\"bg-blue-500 text-white p-2 rounded-r\"\n              >\n                <Plus className=\"w-5 h-5\" />\n              </button>\n            </div>\n            {renderBacklogTasks()}\n          </>\n        ) : (\n          priorities.map((priority) => (\n            <div key={priority.id} className=\"bg-white rounded-lg shadow-md mb-6 p-4\">\n              <div className=\"flex items-center mb-2\">\n               <span className={`w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`}></span>\n                <input\n                  className=\"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\"\n                  placeholder={`Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`}\n                  value={priority.title}\n                  onChange={(e) => setPriorities(prev => prev.map(p => p.id === priority.id ? {...p, title: e.target.value} : p))}\n                />\n              </div>\n              <textarea\n                className=\"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\"\n                placeholder=\"Describe successful outcome\"\n                value={priority.outcome}\n                onChange={(e) => setPriorities(prev => prev.map(p => p.id === priority.id ? {...p, outcome: e.target.value} : p))}\n                rows=\"2\"\n              />\n              {viewMode === 'today' ? (\n                <Droppable droppableId={priority.id.toString()}>\n                  {(provided) => (\n                    <div ref={provided.innerRef} {...provided.droppableProps}>\n                      {getTasksForPriority(priority.id, today).map((task, index) => renderTask(task, index))}\n                      {provided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n              ) : (\n                renderWeekView(priority)\n              )}\n              {viewMode === 'today' && (\n                addingTaskForPriority === priority.id ? (\n                  <div className=\"flex items-center mt-2\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"New task title\"\n                      value={newTaskTitle}\n                      onChange={(e) => setNewTaskTitle(e.target.value)}\n                      onKeyPress={(e) => handleKeyPress(e, priority.id)}\n                      className=\"flex-grow text-sm p-1 border rounded mr-2\"\n                      autoFocus\n                    />\n                    <button onClick={() => handleAddTask(priority.id)} className=\"text-green-500 hover:text-green-700\">\n                      <Plus className=\"w-5 h-5\" />\n                    </button>\n                    <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n                      <X className=\"w-5 h-5\" />\n                    </button>\n                  </div>\n                ) : (\n                  <button \n                    onClick={() => setAddingTaskForPriority(priority.id)} \n                    className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n                  >\n                    <Plus className=\"w-4 h-4 mr-1\" /> Add task\n                  </button>\n                )\n              )}\n            </div>\n          ))\n        )}\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default WeeklyPriorities;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}