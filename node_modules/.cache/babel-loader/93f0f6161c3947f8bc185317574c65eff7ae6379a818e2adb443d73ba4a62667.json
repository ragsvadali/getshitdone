{"ast":null,"code":"var _jsxFileName = \"/Users/Rags/task-manager-app/src/components/WeeklyPriorities.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckCircle, Circle, Plus, ArrowRight, Trash2, Timer, GripVertical, X } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeeklyPriorities = ({\n  priorities,\n  setPriorities,\n  tasks,\n  setTasks\n}) => {\n  _s();\n  const [addingTaskForPriority, setAddingTaskForPriority] = useState(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [viewMode, setViewMode] = useState('today');\n  const today = new Date().toISOString().split('T')[0];\n  useEffect(() => {\n    console.log(\"Current tasks:\", tasks);\n    console.log(\"Current priorities:\", priorities);\n  }, [tasks, priorities]);\n  const getTasksForPriority = priorityId => {\n    console.log(`Getting tasks for priority: ${priorityId}, View mode: ${viewMode}`);\n    if (viewMode === 'today') {\n      const todayTasks = tasks[today] || [];\n      return todayTasks.filter(task => task && task.priority === priorityId.toString());\n    } else {\n      // Week view logic\n      const allTasks = Object.values(tasks).flat();\n      return allTasks.filter(task => task && task.priority === priorityId.toString());\n    }\n  };\n  const handleAddTask = priorityId => {\n    if (newTaskTitle.trim()) {\n      const newTask = {\n        id: Date.now().toString(),\n        title: newTaskTitle.trim(),\n        status: 'pending',\n        priority: priorityId.toString(),\n        date: today,\n        completedPomodoros: 0\n      };\n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [today]: [...(prevTasks[today] || []), newTask]\n      }));\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n  const handleKeyPress = (event, priorityId) => {\n    if (event.key === 'Enter') {\n      handleAddTask(priorityId);\n    }\n  };\n  const handleTaskChange = (taskId, date, field, value) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        [field]: value\n      } : task)\n    }));\n  };\n  const toggleTaskStatus = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        status: task.status === 'done' ? 'pending' : 'done'\n      } : task)\n    }));\n  };\n  const deferTask = (taskId, date) => {\n    const tomorrow = new Date(date);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const tomorrowString = tomorrow.toISOString().split('T')[0];\n    setTasks(prevTasks => {\n      const taskToDefer = prevTasks[date].find(task => task.id === taskId);\n      return {\n        ...prevTasks,\n        [date]: prevTasks[date].filter(task => task.id !== taskId),\n        [tomorrowString]: [...(prevTasks[tomorrowString] || []), {\n          ...taskToDefer,\n          date: tomorrowString\n        }]\n      };\n    });\n  };\n  const deleteTask = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].filter(task => task.id !== taskId)\n    }));\n  };\n  const addPomodoro = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        completedPomodoros: (task.completedPomodoros || 0) + 1\n      } : task)\n    }));\n  };\n\n  /* prev version that was jumping things back into place\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n     if (!destination) return;\n     const sourceDate = source.droppableId;\n    const destDate = destination.droppableId;\n     if (sourceDate !== destDate) return;\n     const currentTasks = tasks[sourceDate] || [];\n    \n    if (!Array.isArray(currentTasks)) {\n      console.error('Tasks for the current date are not an array:', currentTasks);\n      return;\n    }\n     const newTasks = Array.from(currentTasks);\n    const [reorderedItem] = newTasks.splice(source.index, 1);\n    newTasks.splice(destination.index, 0, reorderedItem);\n     setTasks(prevTasks => ({\n      ...prevTasks,\n      [sourceDate]: newTasks\n    }));\n  }; */\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    console.log('drag from', source);\n    console.log('drag to:', destination);\n    if (!destination) return;\n    const sourceDate = source.droppableId;\n    const destDate = destination.droppableId;\n    if (sourceDate !== destDate) return;\n    setTasks(prevTasks => {\n      const currentTasks = prevTasks[sourceDate] || [];\n      console.log('current tasks:', currentTasks);\n      const newTasks = Array.from(currentTasks);\n      console.log('tasks:', newTasks);\n      const [reorderedItem] = newTasks.splice(source.index, 1);\n      console.log('item removed:', reorderedItem);\n      newTasks.splice(destination.index, 0, reorderedItem);\n      return {\n        ...prevTasks,\n        [sourceDate]: newTasks\n      };\n    });\n  };\n\n  /* render wasn't showing + signs etc\n  const renderTask = (task, index) => (\n    <Draggable key={task.id} draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={`flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`}\n        >\n          <GripVertical className=\"w-4 h-4 text-gray-400 mr-2\" />\n          <button onClick={() => toggleTaskStatus(task.id, task.date)} className=\"mr-2 flex-shrink-0\">\n            {task.status === 'done' ? (\n              <CheckCircle className=\"w-4 h-4 text-green-500\" />\n            ) : (\n              <Circle className=\"w-4 h-4 text-gray-300\" />\n            )}\n          </button>\n          <input\n            value={task.title}\n            onChange={(e) => handleTaskChange(task.id, task.date, 'title', e.target.value)}\n            className={`flex-grow bg-transparent border-none focus:outline-none focus:ring-0 ${task.status === 'done' ? 'text-gray-500' : ''}`}\n            disabled={task.status === 'done'}\n          />\n          <div className=\"flex items-center ml-2\">\n            <button onClick={() => addPomodoro(task.id, task.date)} className=\"text-gray-400 hover:text-gray-600 mr-2\">\n              <Plus className=\"w-4 h-4\" />\n            </button>\n            <Timer className=\"w-4 h-4 text-gray-400 mr-1\" />\n            <span className=\"text-xs text-gray-600 mr-2\">{task.completedPomodoros || 0}</span>\n            <button onClick={() => deferTask(task.id, task.date)} className=\"text-blue-500 hover:text-blue-700 mr-2\">\n              <ArrowRight className=\"w-4 h-4\" />\n            </button>\n            <button onClick={() => deleteTask(task.id, task.date)} className=\"text-red-500 hover:text-red-700\">\n              <Trash2 className=\"w-4 h-4\" />\n            </button>\n          </div>\n          {viewMode === 'week' && (\n            <span className=\"text-xs text-gray-500 ml-2\">{task.date}</span>\n          )}\n        </div>\n      )}\n    </Draggable>\n  ); */\n\n  const renderTask = (task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: task.id,\n    index: index,\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      className: `flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(GripVertical, {\n        className: \"w-4 h-4 text-gray-400 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleTaskStatus(task.id, task.date),\n        className: \"mr-2 flex-shrink-0\",\n        children: task.status === 'done' ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-4 h-4 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Circle, {\n          className: \"w-4 h-4 text-gray-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: task.title,\n        onChange: e => handleTaskChange(task.id, task.date, 'title', e.target.value),\n        className: `flex-grow bg-transparent border-none focus:outline-none focus:ring-0 ${task.status === 'done' ? 'text-gray-500' : ''}`,\n        disabled: task.status === 'done'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center ml-2\",\n        children: [task.status !== 'done' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addPomodoro(task.id, task.date),\n            className: \"text-gray-400 hover:text-gray-600 mr-2\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deferTask(task.id, task.date),\n            className: \"text-blue-500 hover:text-blue-700 mr-2\",\n            children: /*#__PURE__*/_jsxDEV(ArrowRight, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(task.id, task.date),\n            className: \"text-red-500 hover:text-red-700 mr-2\",\n            children: /*#__PURE__*/_jsxDEV(Trash2, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), task.completedPomodoros > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Timer, {\n            className: \"w-4 h-4 text-gray-400 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-gray-600 mr-2\",\n            children: task.completedPomodoros\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), viewMode === 'week' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-xs text-gray-500 ml-2\",\n        children: task.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this)\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-semibold\",\n          children: [viewMode === 'today' ? \"Today's\" : \"This Week's\", \" Priorities\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center bg-gray-200 rounded-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('today'),\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('week'),\n            children: \"Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), priorities.map(priority => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md mb-6 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\",\n            placeholder: `Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`,\n            value: priority.title,\n            onChange: e => setPriorities(prev => prev.map(p => p.id === priority.id ? {\n              ...p,\n              title: e.target.value\n            } : p))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\",\n          placeholder: \"Describe successful outcome\",\n          value: priority.outcome,\n          onChange: e => setPriorities(prev => prev.map(p => p.id === priority.id ? {\n            ...p,\n            outcome: e.target.value\n          } : p)),\n          rows: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: priority.id.toString(),\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [getTasksForPriority(priority.id).map((task, index) => renderTask(task, index)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), viewMode === 'today' && (addingTaskForPriority === priority.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New task title\",\n            value: newTaskTitle,\n            onChange: e => setNewTaskTitle(e.target.value),\n            onKeyPress: e => handleKeyPress(e, priority.id),\n            className: \"flex-grow text-sm p-1 border rounded mr-2\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddTask(priority.id),\n            className: \"text-green-500 hover:text-green-700\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAddingTaskForPriority(null),\n            className: \"text-red-500 hover:text-red-700 ml-2\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setAddingTaskForPriority(priority.id),\n          className: \"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            className: \"w-4 h-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 19\n          }, this), \" Add task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }, this))]\n      }, priority.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklyPriorities, \"fKnVsmnvFISHPBdBy3zITHrAqGc=\");\n_c = WeeklyPriorities;\nexport default WeeklyPriorities;\nvar _c;\n$RefreshReg$(_c, \"WeeklyPriorities\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","CheckCircle","Circle","Plus","ArrowRight","Trash2","Timer","GripVertical","X","jsxDEV","_jsxDEV","Fragment","_Fragment","WeeklyPriorities","priorities","setPriorities","tasks","setTasks","_s","addingTaskForPriority","setAddingTaskForPriority","newTaskTitle","setNewTaskTitle","viewMode","setViewMode","today","Date","toISOString","split","console","log","getTasksForPriority","priorityId","todayTasks","filter","task","priority","toString","allTasks","Object","values","flat","handleAddTask","trim","newTask","id","now","title","status","date","completedPomodoros","prevTasks","handleKeyPress","event","key","handleTaskChange","taskId","field","value","map","toggleTaskStatus","deferTask","tomorrow","setDate","getDate","tomorrowString","taskToDefer","find","deleteTask","addPomodoro","onDragEnd","result","source","destination","sourceDate","droppableId","destDate","currentTasks","newTasks","Array","from","reorderedItem","splice","index","renderTask","draggableId","children","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","className","isDragging","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","target","disabled","type","placeholder","prev","p","outcome","rows","droppableProps","onKeyPress","autoFocus","_c","$RefreshReg$"],"sources":["/Users/Rags/task-manager-app/src/components/WeeklyPriorities.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckCircle, Circle, Plus, ArrowRight, Trash2, Timer, GripVertical, X } from 'lucide-react';\n\nconst WeeklyPriorities = ({ priorities, setPriorities, tasks, setTasks }) => {\n  const [addingTaskForPriority, setAddingTaskForPriority] = useState(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [viewMode, setViewMode] = useState('today');\n\n  const today = new Date().toISOString().split('T')[0];\n\n  useEffect(() => {\n    console.log(\"Current tasks:\", tasks);\n    console.log(\"Current priorities:\", priorities);\n  }, [tasks, priorities]);\n\n  const getTasksForPriority = (priorityId) => {\n    console.log(`Getting tasks for priority: ${priorityId}, View mode: ${viewMode}`);\n    if (viewMode === 'today') {\n      const todayTasks = tasks[today] || [];\n      return todayTasks.filter(task => task && task.priority === priorityId.toString());\n    } else {\n      // Week view logic\n      const allTasks = Object.values(tasks).flat();\n      return allTasks.filter(task => task && task.priority === priorityId.toString());\n    }\n  };\n\n  const handleAddTask = (priorityId) => {\n    if (newTaskTitle.trim()) {\n      const newTask = {\n        id: Date.now().toString(),\n        title: newTaskTitle.trim(),\n        status: 'pending',\n        priority: priorityId.toString(),\n        date: today,\n        completedPomodoros: 0\n      };\n      \n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [today]: [...(prevTasks[today] || []), newTask]\n      }));\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n\n  const handleKeyPress = (event, priorityId) => {\n    if (event.key === 'Enter') {\n      handleAddTask(priorityId);\n    }\n  };\n\n  const handleTaskChange = (taskId, date, field, value) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, [field]: value } : task\n      )\n    }));\n  };\n\n  const toggleTaskStatus = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, status: task.status === 'done' ? 'pending' : 'done' } : task\n      )\n    }));\n  };\n\n  const deferTask = (taskId, date) => {\n    const tomorrow = new Date(date);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const tomorrowString = tomorrow.toISOString().split('T')[0];\n\n    setTasks(prevTasks => {\n      const taskToDefer = prevTasks[date].find(task => task.id === taskId);\n      return {\n        ...prevTasks,\n        [date]: prevTasks[date].filter(task => task.id !== taskId),\n        [tomorrowString]: [...(prevTasks[tomorrowString] || []), { ...taskToDefer, date: tomorrowString }]\n      };\n    });\n  };\n\n  const deleteTask = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].filter(task => task.id !== taskId)\n    }));\n  };\n\n  const addPomodoro = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, completedPomodoros: (task.completedPomodoros || 0) + 1 } : task\n      )\n    }));\n  };\n\n  /* prev version that was jumping things back into place\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n\n    if (!destination) return;\n\n    const sourceDate = source.droppableId;\n    const destDate = destination.droppableId;\n\n    if (sourceDate !== destDate) return;\n\n    const currentTasks = tasks[sourceDate] || [];\n    \n    if (!Array.isArray(currentTasks)) {\n      console.error('Tasks for the current date are not an array:', currentTasks);\n      return;\n    }\n\n    const newTasks = Array.from(currentTasks);\n    const [reorderedItem] = newTasks.splice(source.index, 1);\n    newTasks.splice(destination.index, 0, reorderedItem);\n\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [sourceDate]: newTasks\n    }));\n  }; */\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n\n    console.log('drag from', source);\n    console.log('drag to:',destination);\n  \n    if (!destination) return;\n  \n    const sourceDate = source.droppableId;\n    const destDate = destination.droppableId;\n  \n    if (sourceDate !== destDate) return;\n  \n    setTasks(prevTasks => {\n      const currentTasks = prevTasks[sourceDate] || [];\n      console.log('current tasks:',currentTasks);\n      const newTasks = Array.from(currentTasks);\n      console.log('tasks:', newTasks);\n      const [reorderedItem] = newTasks.splice(source.index, 1);\n      console.log('item removed:', reorderedItem);\n      newTasks.splice(destination.index, 0, reorderedItem);\n  \n      return {\n        ...prevTasks,\n        [sourceDate]: newTasks\n      };\n    });\n  };\n\n\n  /* render wasn't showing + signs etc\n  const renderTask = (task, index) => (\n    <Draggable key={task.id} draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={`flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`}\n        >\n          <GripVertical className=\"w-4 h-4 text-gray-400 mr-2\" />\n          <button onClick={() => toggleTaskStatus(task.id, task.date)} className=\"mr-2 flex-shrink-0\">\n            {task.status === 'done' ? (\n              <CheckCircle className=\"w-4 h-4 text-green-500\" />\n            ) : (\n              <Circle className=\"w-4 h-4 text-gray-300\" />\n            )}\n          </button>\n          <input\n            value={task.title}\n            onChange={(e) => handleTaskChange(task.id, task.date, 'title', e.target.value)}\n            className={`flex-grow bg-transparent border-none focus:outline-none focus:ring-0 ${task.status === 'done' ? 'text-gray-500' : ''}`}\n            disabled={task.status === 'done'}\n          />\n          <div className=\"flex items-center ml-2\">\n            <button onClick={() => addPomodoro(task.id, task.date)} className=\"text-gray-400 hover:text-gray-600 mr-2\">\n              <Plus className=\"w-4 h-4\" />\n            </button>\n            <Timer className=\"w-4 h-4 text-gray-400 mr-1\" />\n            <span className=\"text-xs text-gray-600 mr-2\">{task.completedPomodoros || 0}</span>\n            <button onClick={() => deferTask(task.id, task.date)} className=\"text-blue-500 hover:text-blue-700 mr-2\">\n              <ArrowRight className=\"w-4 h-4\" />\n            </button>\n            <button onClick={() => deleteTask(task.id, task.date)} className=\"text-red-500 hover:text-red-700\">\n              <Trash2 className=\"w-4 h-4\" />\n            </button>\n          </div>\n          {viewMode === 'week' && (\n            <span className=\"text-xs text-gray-500 ml-2\">{task.date}</span>\n          )}\n        </div>\n      )}\n    </Draggable>\n  ); */\n\n  const renderTask = (task, index) => (\n    <Draggable key={task.id} draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={`flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`}\n        >\n          <GripVertical className=\"w-4 h-4 text-gray-400 mr-2\" />\n          <button onClick={() => toggleTaskStatus(task.id, task.date)} className=\"mr-2 flex-shrink-0\">\n            {task.status === 'done' ? (\n              <CheckCircle className=\"w-4 h-4 text-green-500\" />\n            ) : (\n              <Circle className=\"w-4 h-4 text-gray-300\" />\n            )}\n          </button>\n          <input\n            value={task.title}\n            onChange={(e) => handleTaskChange(task.id, task.date, 'title', e.target.value)}\n            className={`flex-grow bg-transparent border-none focus:outline-none focus:ring-0 ${task.status === 'done' ? 'text-gray-500' : ''}`}\n            disabled={task.status === 'done'}\n          />\n          <div className=\"flex items-center ml-2\">\n            {task.status !== 'done' && (\n              <>\n                <button onClick={() => addPomodoro(task.id, task.date)} className=\"text-gray-400 hover:text-gray-600 mr-2\">\n                  <Plus className=\"w-4 h-4\" />\n                </button>\n                <button onClick={() => deferTask(task.id, task.date)} className=\"text-blue-500 hover:text-blue-700 mr-2\">\n                  <ArrowRight className=\"w-4 h-4\" />\n                </button>\n                <button onClick={() => deleteTask(task.id, task.date)} className=\"text-red-500 hover:text-red-700 mr-2\">\n                  <Trash2 className=\"w-4 h-4\" />\n                </button>\n              </>\n            )}\n            {task.completedPomodoros > 0 && (\n              <>\n                <Timer className=\"w-4 h-4 text-gray-400 mr-1\" />\n                <span className=\"text-xs text-gray-600 mr-2\">{task.completedPomodoros}</span>\n              </>\n            )}\n          </div>\n          {viewMode === 'week' && (\n            <span className=\"text-xs text-gray-500 ml-2\">{task.date}</span>\n          )}\n        </div>\n      )}\n    </Draggable>\n  );\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"max-w-4xl mx-auto p-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-2xl font-semibold\">{viewMode === 'today' ? \"Today's\" : \"This Week's\"} Priorities</h1>\n          <div className=\"flex items-center bg-gray-200 rounded-full\">\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('today')}\n            >\n              Today\n            </button>\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('week')}\n            >\n              Week\n            </button>\n          </div>\n        </div>\n        {priorities.map((priority) => (\n          <div key={priority.id} className=\"bg-white rounded-lg shadow-md mb-6 p-4\">\n            <div className=\"flex items-center mb-2\">\n              <span className={`w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`}></span>\n              <input\n                className=\"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\"\n                placeholder={`Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`}\n                value={priority.title}\n                onChange={(e) => setPriorities(prev => prev.map(p => p.id === priority.id ? {...p, title: e.target.value} : p))}\n              />\n            </div>\n            <textarea\n              className=\"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\"\n              placeholder=\"Describe successful outcome\"\n              value={priority.outcome}\n              onChange={(e) => setPriorities(prev => prev.map(p => p.id === priority.id ? {...p, outcome: e.target.value} : p))}\n              rows=\"2\"\n            />\n            <Droppable droppableId={priority.id.toString()}>\n              {(provided) => (\n                <div ref={provided.innerRef} {...provided.droppableProps}>\n                  {getTasksForPriority(priority.id).map((task, index) => renderTask(task, index))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n            {viewMode === 'today' && (\n              addingTaskForPriority === priority.id ? (\n                <div className=\"flex items-center mt-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"New task title\"\n                    value={newTaskTitle}\n                    onChange={(e) => setNewTaskTitle(e.target.value)}\n                    onKeyPress={(e) => handleKeyPress(e, priority.id)}\n                    className=\"flex-grow text-sm p-1 border rounded mr-2\"\n                    autoFocus\n                  />\n                  <button onClick={() => handleAddTask(priority.id)} className=\"text-green-500 hover:text-green-700\">\n                    <Plus className=\"w-5 h-5\" />\n                  </button>\n                  <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n                    <X className=\"w-5 h-5\" />\n                  </button>\n                </div>\n              ) : (\n                <button \n                  onClick={() => setAddingTaskForPriority(priority.id)} \n                  className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n                >\n                  <Plus className=\"w-4 h-4 mr-1\" /> Add task\n                </button>\n              )\n            )}\n          </div>\n        ))}\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default WeeklyPriorities;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}