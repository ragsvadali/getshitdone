{"ast":null,"code":"var _jsxFileName = \"/Users/Rags/task-manager-app/src/components/WeeklyPriorities.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckCircle, Circle, Plus, ArrowRight, Trash2, Timer, GripVertical, X } from 'lucide-react';\n\n// Original - ({ priorities, setPriorities, tasks, setTasks, backlogTasks, setBacklogTasks, addTaskToToday })\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeeklyPriorities = ({\n  priorities,\n  setPriorities,\n  tasks,\n  setTasks,\n  backlogTasks,\n  setBacklogTasks\n}) => {\n  _s();\n  const [viewMode, setViewMode] = useState('today');\n  const [addingTaskForPriority, setAddingTaskForPriority] = useState(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  //const [viewMode, setViewMode] = useState('today');\n\n  const today = new Date().toISOString().split('T')[0];\n  console.log('date is:', today);\n  const getTasksForPriority = (priorityId, date) => {\n    return (tasks[date] || []).filter(task => task && task.priority === priorityId.toString());\n  };\n  const handleAddTask = priorityId => {\n    if (newTaskTitle.trim()) {\n      const newTask = {\n        id: Date.now().toString(),\n        title: newTaskTitle.trim(),\n        status: 'pending',\n        priority: priorityId.toString(),\n        date: today,\n        completedPomodoros: 0\n      };\n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [today]: [...(prevTasks[today] || []), newTask]\n      }));\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n  const handleKeyPress = (event, priorityId) => {\n    if (event.key === 'Enter') {\n      handleAddTask(priorityId);\n    }\n  };\n  const toggleTaskStatus = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        status: task.status === 'done' ? 'pending' : 'done'\n      } : task)\n    }));\n  };\n  const deferTask = (taskId, date) => {\n    const tomorrow = new Date(date);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const tomorrowString = tomorrow.toISOString().split('T')[0];\n    setTasks(prevTasks => {\n      const taskToDefer = prevTasks[date].find(task => task.id === taskId);\n      return {\n        ...prevTasks,\n        [date]: prevTasks[date].filter(task => task.id !== taskId),\n        [tomorrowString]: [...(prevTasks[tomorrowString] || []), {\n          ...taskToDefer,\n          date: tomorrowString\n        }]\n      };\n    });\n  };\n  const deleteTask = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].filter(task => task.id !== taskId)\n    }));\n  };\n  const addPomodoro = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        completedPomodoros: (task.completedPomodoros || 0) + 1\n      } : task)\n    }));\n  };\n\n  // Adding a new function to get to parity with daily task addition\n  const handleAddBacklogTask = () => {\n    if (newTaskTitle.trim()) {\n      setBacklogTasks(prev => [...prev, {\n        id: Date.now().toString(),\n        title: newTaskTitle.trim()\n      }]);\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n\n  /* Old \n  const renderBacklogTasks = () => {\n    return (\n      <Droppable droppableId=\"backlog\">\n        {(provided) => (\n          <div {...provided.droppableProps} ref={provided.innerRef}>\n            {backlogTasks.map((task, index) => (\n              <Draggable key={task.id} draggableId={task.id} index={index}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    className={`flex items-center bg-white p-3 mb-2 rounded shadow ${\n                      snapshot.isDragging ? 'bg-gray-100' : ''\n                    }`}\n                  >\n                    <GripVertical className=\"w-4 h-4 text-gray-400 mr-2\" />\n                    <span className=\"flex-grow\">{task.title}</span>\n                    <div className=\"flex items-center\">\n                      <select\n                        onChange={(e) => {\n                          addTaskToToday(task, e.target.value);\n                          setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id));\n                        }}\n                        className=\"mr-2 p-1 border rounded\"\n                      >\n                        <option value=\"\">Schedule to...</option>\n                        {priorities.map((priority) => (\n                          <option key={priority.id} value={priority.id}>\n                            {priority.title || `Priority ${priority.id}`}\n                          </option>\n                        ))}\n                      </select>\n                      <button\n                        onClick={() => setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id))}\n                        className=\"text-red-500 hover:text-red-700\"\n                      >\n                        <Trash2 className=\"w-5 h-5\" />\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    );\n  }; */\n\n  /* OLD2 Version of renderBacklogTasks to align render of task addition box, was missing grip\n  const renderBacklogTasks = () => {\n    return (\n      <>\n        <Droppable droppableId=\"backlog\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {backlogTasks.map((task, index) => (\n                <Draggable key={task.id} draggableId={task.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      className={`flex items-center bg-white p-3 mb-2 rounded shadow ${\n                        snapshot.isDragging ? 'bg-gray-100' : ''\n                      }`}\n                    >\n                      <span className=\"flex-grow\">{task.title}</span>\n                      <div className=\"flex items-center\">\n                        <select\n                          onChange={(e) => {\n                            addTaskToToday(task, e.target.value);\n                            setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id));\n                          }}\n                          className=\"mr-2 p-1 border rounded\"\n                        >\n                          <option value=\"\">Schedule to...</option>\n                          {priorities.map((priority) => (\n                            <option key={priority.id} value={priority.id}>\n                              {priority.title || `Priority ${priority.id}`}\n                            </option>\n                          ))}\n                        </select>\n                        <button\n                          onClick={() => setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id))}\n                          className=\"text-red-500 hover:text-red-700\"\n                        >\n                          <Trash2 className=\"w-5 h-5\" />\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n        {addingTaskForPriority === 'backlog' ? (\n          <div className=\"flex items-center mt-2\">\n            <input\n              type=\"text\"\n              placeholder=\"New task title\"\n              value={newTaskTitle}\n              onChange={(e) => setNewTaskTitle(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && handleAddBacklogTask()}\n              className=\"flex-grow text-sm p-1 border rounded mr-2\"\n              autoFocus\n            />\n            <button onClick={handleAddBacklogTask} className=\"text-green-500 hover:text-green-700\">\n              <Plus className=\"w-5 h-5\" />\n            </button>\n            <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n        ) : (\n          <button \n            onClick={() => setAddingTaskForPriority('backlog')} \n            className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n          >\n            <Plus className=\"w-4 h-4 mr-1\" /> Add task\n          </button>\n        )}\n      </>\n    );\n  }; */\n\n  // Adding grippable elements back to Backlog view\n  const renderBacklogTasks = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"backlog\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [backlogTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: task.id,\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              className: `flex items-center bg-white p-3 mb-2 rounded shadow ${snapshot.isDragging ? 'bg-gray-100' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                ...provided.dragHandleProps,\n                className: \"mr-2 cursor-move\",\n                children: /*#__PURE__*/_jsxDEV(GripVertical, {\n                  className: \"w-4 h-4 text-gray-400\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"flex-grow\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => {\n                    addTaskToToday(task, e.target.value);\n                    setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id));\n                  },\n                  className: \"mr-2 p-1 border rounded\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Schedule to...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 27\n                  }, this), priorities.map(priority => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: priority.id,\n                    children: priority.title || `Priority ${priority.id}`\n                  }, priority.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id)),\n                  className: \"text-red-500 hover:text-red-700\",\n                  children: /*#__PURE__*/_jsxDEV(Trash2, {\n                    className: \"w-5 h-5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), addingTaskForPriority === 'backlog' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New task title\",\n          value: newTaskTitle,\n          onChange: e => setNewTaskTitle(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleAddBacklogTask(),\n          className: \"flex-grow text-sm p-1 border rounded mr-2\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddBacklogTask,\n          className: \"text-green-500 hover:text-green-700\",\n          children: /*#__PURE__*/_jsxDEV(Plus, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setAddingTaskForPriority(null),\n          className: \"text-red-500 hover:text-red-700 ml-2\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setAddingTaskForPriority('backlog'),\n        className: \"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          className: \"w-4 h-4 mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), \" Add task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  };\n\n  // Version of onDragEng to accomodate drag & drop in backlog\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (viewMode === 'backlog') {\n      // Handle reordering in backlog using reduce\n      setBacklogTasks(prevTasks => {\n        const newTasks = prevTasks.reduce((acc, task, index) => {\n          if (index === source.index) {\n            return acc; // Skip this index as we're moving this task\n          }\n          if (index === destination.index) {\n            // Insert the dragged task before the task at the destination index\n            acc.push(prevTasks[source.index]);\n            acc.push(task);\n          } else {\n            acc.push(task);\n          }\n          return acc;\n        }, []);\n\n        // If the task was moved to the end, add it here\n        if (destination.index === prevTasks.length) {\n          newTasks.push(prevTasks[source.index]);\n        }\n        return newTasks;\n      });\n    } else if (viewMode === 'today') {\n      // Handle reordering in today's tasks\n      if (source.droppableId !== destination.droppableId) {\n        console.log('Attempted to move task between priorities. This is not allowed.');\n        return;\n      }\n      const today = new Date().toISOString().split('T')[0];\n      setTasks(prevTasks => {\n        const currentTasks = prevTasks[today] || [];\n        const priorityTasks = currentTasks.filter(task => task.priority === source.droppableId);\n        const newPriorityTasks = priorityTasks.reduce((acc, task, index) => {\n          if (index === source.index) {\n            return acc; // Skip this index as we're moving this task\n          }\n          if (index === destination.index) {\n            // Insert the dragged task before the task at the destination index\n            acc.push(priorityTasks[source.index]);\n            acc.push(task);\n          } else {\n            acc.push(task);\n          }\n          return acc;\n        }, []);\n\n        // If the task was moved to the end, add it here\n        if (destination.index === priorityTasks.length) {\n          newPriorityTasks.push(priorityTasks[source.index]);\n        }\n        const newTasks = currentTasks.reduce((acc, task) => {\n          if (task.priority === source.droppableId) {\n            const newTask = newPriorityTasks.shift();\n            acc.push(newTask || task);\n          } else {\n            acc.push(task);\n          }\n          return acc;\n        }, []);\n        return {\n          ...prevTasks,\n          [today]: newTasks\n        };\n      });\n    }\n  };\n  const renderTask = (task, index) => {\n    if (!task) return null;\n    const handleToggleStatus = () => {\n      toggleTaskStatus(task.id, task.date);\n    };\n    const taskContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggleStatus,\n        className: \"mr-2 flex-shrink-0\",\n        children: task.status === 'done' ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-4 h-4 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Circle, {\n          className: \"w-4 h-4 text-gray-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `flex-grow ${task.status === 'done' ? 'text-gray-500 line-through' : ''}`,\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), task.completedPomodoros > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-xs text-gray-600 ml-2\",\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          className: \"w-4 h-4 inline-block mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), task.completedPomodoros]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n    if (viewMode === 'today') {\n      return /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: task.id,\n        index: index,\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          className: `flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(GripVertical, {\n            className: \"w-4 h-4 text-gray-400 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this), taskContent, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center ml-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addPomodoro(task.id, task.date),\n              className: \"text-gray-400 hover:text-gray-600 mr-2\",\n              children: /*#__PURE__*/_jsxDEV(Plus, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deferTask(task.id, task.date),\n              className: \"text-blue-500 hover:text-blue-700 mr-2\",\n              children: /*#__PURE__*/_jsxDEV(ArrowRight, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(task.id, task.date),\n              className: \"text-red-500 hover:text-red-700\",\n              children: /*#__PURE__*/_jsxDEV(Trash2, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this)\n      }, `${task.id}-${task.priority}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this);\n    } else {\n      const isToday = task.date === today;\n      const taskDate = new Date(task.date);\n      const dayOfWeek = taskDate.toLocaleDateString('en-US', {\n        weekday: 'short'\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center text-sm mb-2\",\n        children: [taskContent, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-xs ml-2 ${isToday ? 'bg-blue-500 text-white px-2 py-1 rounded-full' : 'text-gray-500'}`,\n          children: isToday ? 'Today' : dayOfWeek\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)]\n      }, `${task.id}-${task.priority}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const renderWeekView = priority => {\n    const startOfWeek = new Date(today);\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay());\n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(endOfWeek.getDate() + 6);\n    const weekTasks = Object.entries(tasks).filter(([date]) => {\n      const taskDate = new Date(date);\n      return taskDate >= startOfWeek && taskDate <= endOfWeek;\n    }).flatMap(([date, dateTasks]) => dateTasks.filter(task => task && task.priority === priority.id.toString())).sort((a, b) => new Date(a.date) - new Date(b.date));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: weekTasks.map((task, index) => renderTask(task, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this);\n  };\n\n  /* OLD\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"max-w-4xl mx-auto p-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-2xl font-semibold\">Get Shit Done</h1>\n          <div className=\"flex items-center bg-gray-200 rounded-full\">\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('today')}\n            >\n              Today\n            </button>\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('week')}\n            >\n              Week\n            </button>\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'backlog' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('backlog')}\n            >\n              Backlog\n            </button>\n          </div>\n        </div>\n         {viewMode === 'backlog' ? (\n          <>\n            <div className=\"mb-4 flex\">\n              <input\n                type=\"text\"\n                value={newTaskTitle}\n                onChange={(e) => setNewTaskTitle(e.target.value)}\n                onKeyPress={(e) => {\n                  if (e.key === 'Enter' && newTaskTitle.trim()) {\n                    setBacklogTasks(prev => [...prev, { id: Date.now().toString(), title: newTaskTitle.trim() }]);\n                    setNewTaskTitle('');\n                  }\n                }}\n                placeholder=\"Add a new task to backlog\"\n                className=\"flex-grow p-2 border rounded-l\"\n              />\n              <button \n                onClick={() => {\n                  if (newTaskTitle.trim()) {\n                    setBacklogTasks(prev => [...prev, { id: Date.now().toString(), title: newTaskTitle.trim() }]);\n                    setNewTaskTitle('');\n                  }\n                }}\n                className=\"bg-blue-500 text-white p-2 rounded-r\"\n              >\n                <Plus className=\"w-5 h-5\" />\n              </button>\n            </div>\n            {renderBacklogTasks()}\n          </>\n        ) : (\n          priorities.map((priority) => (\n            <div key={priority.id} className=\"bg-white rounded-lg shadow-md mb-6 p-4\">\n              <div className=\"flex items-center mb-2\">\n               <span className={`w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`}></span>\n                <input\n                  className=\"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\"\n                  placeholder={`Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`}\n                  value={priority.title}\n                  onChange={(e) => setPriorities(prev => prev.map(p => p.id === priority.id ? {...p, title: e.target.value} : p))}\n                />\n              </div>\n              <textarea\n                className=\"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\"\n                placeholder=\"Describe successful outcome\"\n                value={priority.outcome}\n                onChange={(e) => setPriorities(prev => prev.map(p => p.id === priority.id ? {...p, outcome: e.target.value} : p))}\n                rows=\"2\"\n              />\n              {viewMode === 'today' ? (\n                <Droppable droppableId={priority.id.toString()}>\n                  {(provided) => (\n                    <div ref={provided.innerRef} {...provided.droppableProps}>\n                      {getTasksForPriority(priority.id, today).map((task, index) => renderTask(task, index))}\n                      {provided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n              ) : (\n                renderWeekView(priority)\n              )}\n              {viewMode === 'today' && (\n                addingTaskForPriority === priority.id ? (\n                  <div className=\"flex items-center mt-2\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"New task title\"\n                      value={newTaskTitle}\n                      onChange={(e) => setNewTaskTitle(e.target.value)}\n                      onKeyPress={(e) => handleKeyPress(e, priority.id)}\n                      className=\"flex-grow text-sm p-1 border rounded mr-2\"\n                      autoFocus\n                    />\n                    <button onClick={() => handleAddTask(priority.id)} className=\"text-green-500 hover:text-green-700\">\n                      <Plus className=\"w-5 h-5\" />\n                    </button>\n                    <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n                      <X className=\"w-5 h-5\" />\n                    </button>\n                  </div>\n                ) : (\n                  <button \n                    onClick={() => setAddingTaskForPriority(priority.id)} \n                    className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n                  >\n                    <Plus className=\"w-4 h-4 mr-1\" /> Add task\n                  </button>\n                )\n              )}\n            </div>\n          ))\n        )}\n      </div>\n    </DragDropContext>\n  ); */\n\n  // Adding a return function that uses the new renderBacklogTasks() function\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-semibold\",\n          children: [\"Get Shit Done \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500\",\n            children: today\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center bg-gray-200 rounded-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('today'),\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('week'),\n            children: \"Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'backlog' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('backlog'),\n            children: \"Backlog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this), viewMode === 'backlog' ? renderBacklogTasks() : priorities.map(priority => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md mb-6 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\",\n            placeholder: `Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`,\n            value: priority.title,\n            onChange: e => setPriorities(prev => prev.map(p => p.id === priority.id ? {\n              ...p,\n              title: e.target.value\n            } : p))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\",\n          placeholder: \"Describe successful outcome\",\n          value: priority.outcome,\n          onChange: e => setPriorities(prev => prev.map(p => p.id === priority.id ? {\n            ...p,\n            outcome: e.target.value\n          } : p)),\n          rows: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 15\n        }, this), viewMode === 'today' ? /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: priority.id.toString(),\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [getTasksForPriority(priority.id, today).map((task, index) => renderTask(task, index)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 17\n        }, this) : renderWeekView(priority), viewMode === 'today' && (addingTaskForPriority === priority.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New task title\",\n            value: newTaskTitle,\n            onChange: e => setNewTaskTitle(e.target.value),\n            onKeyPress: e => handleKeyPress(e, priority.id),\n            className: \"flex-grow text-sm p-1 border rounded mr-2\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddTask(priority.id),\n            className: \"text-green-500 hover:text-green-700\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAddingTaskForPriority(null),\n            className: \"text-red-500 hover:text-red-700 ml-2\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setAddingTaskForPriority(priority.id),\n          className: \"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            className: \"w-4 h-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 21\n          }, this), \" Add task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 19\n        }, this))]\n      }, priority.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 608,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklyPriorities, \"g05gm70v+orCRitiiEpEtcROjp8=\");\n_c = WeeklyPriorities;\nexport default WeeklyPriorities;\nvar _c;\n$RefreshReg$(_c, \"WeeklyPriorities\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","CheckCircle","Circle","Plus","ArrowRight","Trash2","Timer","GripVertical","X","jsxDEV","_jsxDEV","Fragment","_Fragment","WeeklyPriorities","priorities","setPriorities","tasks","setTasks","backlogTasks","setBacklogTasks","_s","viewMode","setViewMode","addingTaskForPriority","setAddingTaskForPriority","newTaskTitle","setNewTaskTitle","today","Date","toISOString","split","console","log","getTasksForPriority","priorityId","date","filter","task","priority","toString","handleAddTask","trim","newTask","id","now","title","status","completedPomodoros","prevTasks","handleKeyPress","event","key","toggleTaskStatus","taskId","map","deferTask","tomorrow","setDate","getDate","tomorrowString","taskToDefer","find","deleteTask","addPomodoro","handleAddBacklogTask","prev","renderBacklogTasks","children","droppableId","provided","droppableProps","ref","innerRef","index","draggableId","snapshot","draggableProps","className","isDragging","dragHandleProps","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","addTaskToToday","target","value","t","onClick","placeholder","type","onKeyPress","autoFocus","onDragEnd","result","source","destination","newTasks","reduce","acc","push","length","currentTasks","priorityTasks","newPriorityTasks","shift","renderTask","handleToggleStatus","taskContent","isToday","taskDate","dayOfWeek","toLocaleDateString","weekday","renderWeekView","startOfWeek","getDay","endOfWeek","weekTasks","Object","entries","flatMap","dateTasks","sort","a","b","p","outcome","rows","_c","$RefreshReg$"],"sources":["/Users/Rags/task-manager-app/src/components/WeeklyPriorities.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckCircle, Circle, Plus, ArrowRight, Trash2, Timer, GripVertical, X } from 'lucide-react';\n\n// Original - ({ priorities, setPriorities, tasks, setTasks, backlogTasks, setBacklogTasks, addTaskToToday })\nconst WeeklyPriorities = ({ priorities, setPriorities, tasks, setTasks, backlogTasks, setBacklogTasks }) => {\n  const [viewMode, setViewMode] = useState('today');\n  const [addingTaskForPriority, setAddingTaskForPriority] = useState(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  //const [viewMode, setViewMode] = useState('today');\n\n  const today = new Date().toISOString().split('T')[0];\n  console.log('date is:', today);\n\n  const getTasksForPriority = (priorityId, date) => {\n    return (tasks[date] || []).filter(task => task && task.priority === priorityId.toString());\n  };\n\n  const handleAddTask = (priorityId) => {\n    if (newTaskTitle.trim()) {\n      const newTask = {\n        id: Date.now().toString(),\n        title: newTaskTitle.trim(),\n        status: 'pending',\n        priority: priorityId.toString(),\n        date: today,\n        completedPomodoros: 0\n      };\n      \n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [today]: [...(prevTasks[today] || []), newTask]\n      }));\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n\n  const handleKeyPress = (event, priorityId) => {\n    if (event.key === 'Enter') {\n      handleAddTask(priorityId);\n    }\n  };\n\n  const toggleTaskStatus = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, status: task.status === 'done' ? 'pending' : 'done' } : task\n      )\n    }));\n  };\n\n  const deferTask = (taskId, date) => {\n    const tomorrow = new Date(date);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const tomorrowString = tomorrow.toISOString().split('T')[0];\n\n    setTasks(prevTasks => {\n      const taskToDefer = prevTasks[date].find(task => task.id === taskId);\n      return {\n        ...prevTasks,\n        [date]: prevTasks[date].filter(task => task.id !== taskId),\n        [tomorrowString]: [...(prevTasks[tomorrowString] || []), { ...taskToDefer, date: tomorrowString }]\n      };\n    });\n  };\n\n  const deleteTask = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].filter(task => task.id !== taskId)\n    }));\n  };\n\n  const addPomodoro = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, completedPomodoros: (task.completedPomodoros || 0) + 1 } : task\n      )\n    }));\n  };\n\n  // Adding a new function to get to parity with daily task addition\n  const handleAddBacklogTask = () => {\n    if (newTaskTitle.trim()) {\n      setBacklogTasks(prev => [...prev, { id: Date.now().toString(), title: newTaskTitle.trim() }]);\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n\n  /* Old \n  const renderBacklogTasks = () => {\n    return (\n      <Droppable droppableId=\"backlog\">\n        {(provided) => (\n          <div {...provided.droppableProps} ref={provided.innerRef}>\n            {backlogTasks.map((task, index) => (\n              <Draggable key={task.id} draggableId={task.id} index={index}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    className={`flex items-center bg-white p-3 mb-2 rounded shadow ${\n                      snapshot.isDragging ? 'bg-gray-100' : ''\n                    }`}\n                  >\n                    <GripVertical className=\"w-4 h-4 text-gray-400 mr-2\" />\n                    <span className=\"flex-grow\">{task.title}</span>\n                    <div className=\"flex items-center\">\n                      <select\n                        onChange={(e) => {\n                          addTaskToToday(task, e.target.value);\n                          setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id));\n                        }}\n                        className=\"mr-2 p-1 border rounded\"\n                      >\n                        <option value=\"\">Schedule to...</option>\n                        {priorities.map((priority) => (\n                          <option key={priority.id} value={priority.id}>\n                            {priority.title || `Priority ${priority.id}`}\n                          </option>\n                        ))}\n                      </select>\n                      <button\n                        onClick={() => setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id))}\n                        className=\"text-red-500 hover:text-red-700\"\n                      >\n                        <Trash2 className=\"w-5 h-5\" />\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    );\n  }; */\n\n  /* OLD2 Version of renderBacklogTasks to align render of task addition box, was missing grip\n  const renderBacklogTasks = () => {\n    return (\n      <>\n        <Droppable droppableId=\"backlog\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {backlogTasks.map((task, index) => (\n                <Draggable key={task.id} draggableId={task.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      className={`flex items-center bg-white p-3 mb-2 rounded shadow ${\n                        snapshot.isDragging ? 'bg-gray-100' : ''\n                      }`}\n                    >\n                      <span className=\"flex-grow\">{task.title}</span>\n                      <div className=\"flex items-center\">\n                        <select\n                          onChange={(e) => {\n                            addTaskToToday(task, e.target.value);\n                            setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id));\n                          }}\n                          className=\"mr-2 p-1 border rounded\"\n                        >\n                          <option value=\"\">Schedule to...</option>\n                          {priorities.map((priority) => (\n                            <option key={priority.id} value={priority.id}>\n                              {priority.title || `Priority ${priority.id}`}\n                            </option>\n                          ))}\n                        </select>\n                        <button\n                          onClick={() => setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id))}\n                          className=\"text-red-500 hover:text-red-700\"\n                        >\n                          <Trash2 className=\"w-5 h-5\" />\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n        {addingTaskForPriority === 'backlog' ? (\n          <div className=\"flex items-center mt-2\">\n            <input\n              type=\"text\"\n              placeholder=\"New task title\"\n              value={newTaskTitle}\n              onChange={(e) => setNewTaskTitle(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && handleAddBacklogTask()}\n              className=\"flex-grow text-sm p-1 border rounded mr-2\"\n              autoFocus\n            />\n            <button onClick={handleAddBacklogTask} className=\"text-green-500 hover:text-green-700\">\n              <Plus className=\"w-5 h-5\" />\n            </button>\n            <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n        ) : (\n          <button \n            onClick={() => setAddingTaskForPriority('backlog')} \n            className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n          >\n            <Plus className=\"w-4 h-4 mr-1\" /> Add task\n          </button>\n        )}\n      </>\n    );\n  }; */\n\n  // Adding grippable elements back to Backlog view\n  const renderBacklogTasks = () => {\n    return (\n      <>\n        <Droppable droppableId=\"backlog\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {backlogTasks.map((task, index) => (\n                <Draggable key={task.id} draggableId={task.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      className={`flex items-center bg-white p-3 mb-2 rounded shadow ${\n                        snapshot.isDragging ? 'bg-gray-100' : ''\n                      }`}\n                    >\n                      <div {...provided.dragHandleProps} className=\"mr-2 cursor-move\">\n                        <GripVertical className=\"w-4 h-4 text-gray-400\" />\n                      </div>\n                      <span className=\"flex-grow\">{task.title}</span>\n                      <div className=\"flex items-center\">\n                        <select\n                          onChange={(e) => {\n                            addTaskToToday(task, e.target.value);\n                            setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id));\n                          }}\n                          className=\"mr-2 p-1 border rounded\"\n                        >\n                          <option value=\"\">Schedule to...</option>\n                          {priorities.map((priority) => (\n                            <option key={priority.id} value={priority.id}>\n                              {priority.title || `Priority ${priority.id}`}\n                            </option>\n                          ))}\n                        </select>\n                        <button\n                          onClick={() => setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id))}\n                          className=\"text-red-500 hover:text-red-700\"\n                        >\n                          <Trash2 className=\"w-5 h-5\" />\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n        {addingTaskForPriority === 'backlog' ? (\n          <div className=\"flex items-center mt-2\">\n            <input\n              type=\"text\"\n              placeholder=\"New task title\"\n              value={newTaskTitle}\n              onChange={(e) => setNewTaskTitle(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && handleAddBacklogTask()}\n              className=\"flex-grow text-sm p-1 border rounded mr-2\"\n              autoFocus\n            />\n            <button onClick={handleAddBacklogTask} className=\"text-green-500 hover:text-green-700\">\n              <Plus className=\"w-5 h-5\" />\n            </button>\n            <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n        ) : (\n          <button \n            onClick={() => setAddingTaskForPriority('backlog')} \n            className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n          >\n            <Plus className=\"w-4 h-4 mr-1\" /> Add task\n          </button>\n        )}\n      </>\n    );\n  }; \n\n  // Version of onDragEng to accomodate drag & drop in backlog\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n  \n    if (!destination) {\n      return;\n    }\n  \n    if (viewMode === 'backlog') {\n      // Handle reordering in backlog using reduce\n      setBacklogTasks(prevTasks => {\n        const newTasks = prevTasks.reduce((acc, task, index) => {\n          if (index === source.index) {\n            return acc; // Skip this index as we're moving this task\n          }\n          if (index === destination.index) {\n            // Insert the dragged task before the task at the destination index\n            acc.push(prevTasks[source.index]);\n            acc.push(task);\n          } else {\n            acc.push(task);\n          }\n          return acc;\n        }, []);\n  \n        // If the task was moved to the end, add it here\n        if (destination.index === prevTasks.length) {\n          newTasks.push(prevTasks[source.index]);\n        }\n  \n        return newTasks;\n      });\n    } else if (viewMode === 'today') {\n      // Handle reordering in today's tasks\n      if (source.droppableId !== destination.droppableId) {\n        console.log('Attempted to move task between priorities. This is not allowed.');\n        return;\n      }\n  \n      const today = new Date().toISOString().split('T')[0];\n      setTasks(prevTasks => {\n        const currentTasks = prevTasks[today] || [];\n        const priorityTasks = currentTasks.filter(task => task.priority === source.droppableId);\n        \n        const newPriorityTasks = priorityTasks.reduce((acc, task, index) => {\n          if (index === source.index) {\n            return acc; // Skip this index as we're moving this task\n          }\n          if (index === destination.index) {\n            // Insert the dragged task before the task at the destination index\n            acc.push(priorityTasks[source.index]);\n            acc.push(task);\n          } else {\n            acc.push(task);\n          }\n          return acc;\n        }, []);\n  \n        // If the task was moved to the end, add it here\n        if (destination.index === priorityTasks.length) {\n          newPriorityTasks.push(priorityTasks[source.index]);\n        }\n  \n        const newTasks = currentTasks.reduce((acc, task) => {\n          if (task.priority === source.droppableId) {\n            const newTask = newPriorityTasks.shift();\n            acc.push(newTask || task);\n          } else {\n            acc.push(task);\n          }\n          return acc;\n        }, []);\n  \n        return {\n          ...prevTasks,\n          [today]: newTasks\n        };\n      });\n    }\n  };\n\n  const renderTask = (task, index) => {\n    if (!task) return null;\n  \n    const handleToggleStatus = () => {\n      toggleTaskStatus(task.id, task.date);\n    };\n  \n    const taskContent = (\n      <>\n        <button onClick={handleToggleStatus} className=\"mr-2 flex-shrink-0\">\n          {task.status === 'done' ? (\n            <CheckCircle className=\"w-4 h-4 text-green-500\" />\n          ) : (\n            <Circle className=\"w-4 h-4 text-gray-300\" />\n          )}\n        </button>\n        <span className={`flex-grow ${task.status === 'done' ? 'text-gray-500 line-through' : ''}`}>\n          {task.title}\n        </span>\n        {task.completedPomodoros > 0 && (\n          <span className=\"text-xs text-gray-600 ml-2\">\n            <Timer className=\"w-4 h-4 inline-block mr-1\" />\n            {task.completedPomodoros}\n          </span>\n        )}\n      </>\n    );\n  \n    if (viewMode === 'today') {\n      return (\n        <Draggable key={`${task.id}-${task.priority}`} draggableId={task.id} index={index}>\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              className={`flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`}\n            >\n              <GripVertical className=\"w-4 h-4 text-gray-400 mr-2\" />\n              {taskContent}\n              <div className=\"flex items-center ml-2\">\n                <button onClick={() => addPomodoro(task.id, task.date)} className=\"text-gray-400 hover:text-gray-600 mr-2\">\n                  <Plus className=\"w-4 h-4\" />\n                </button>\n                <button onClick={() => deferTask(task.id, task.date)} className=\"text-blue-500 hover:text-blue-700 mr-2\">\n                  <ArrowRight className=\"w-4 h-4\" />\n                </button>\n                <button onClick={() => deleteTask(task.id, task.date)} className=\"text-red-500 hover:text-red-700\">\n                  <Trash2 className=\"w-4 h-4\" />\n                </button>\n              </div>\n            </div>\n          )}\n        </Draggable>\n      );\n    } else {\n      const isToday = task.date === today;\n      const taskDate = new Date(task.date);\n      const dayOfWeek = taskDate.toLocaleDateString('en-US', { weekday: 'short' });\n      \n      return (\n        <div key={`${task.id}-${task.priority}`} className=\"flex items-center text-sm mb-2\">\n          {taskContent}\n          <span className={`text-xs ml-2 ${isToday ? 'bg-blue-500 text-white px-2 py-1 rounded-full' : 'text-gray-500'}`}>\n            {isToday ? 'Today' : dayOfWeek}\n          </span>\n        </div>\n      );\n    }\n  };\n  \n  const renderWeekView = (priority) => {\n    const startOfWeek = new Date(today);\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay());\n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(endOfWeek.getDate() + 6);\n  \n    const weekTasks = Object.entries(tasks)\n      .filter(([date]) => {\n        const taskDate = new Date(date);\n        return taskDate >= startOfWeek && taskDate <= endOfWeek;\n      })\n      .flatMap(([date, dateTasks]) => \n        dateTasks.filter(task => task && task.priority === priority.id.toString())\n      )\n      .sort((a, b) => new Date(a.date) - new Date(b.date));\n  \n    return (\n      <div>\n        {weekTasks.map((task, index) => renderTask(task, index))}\n      </div>\n    );\n  };\n\n\n  /* OLD\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"max-w-4xl mx-auto p-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-2xl font-semibold\">Get Shit Done</h1>\n          <div className=\"flex items-center bg-gray-200 rounded-full\">\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('today')}\n            >\n              Today\n            </button>\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('week')}\n            >\n              Week\n            </button>\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'backlog' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('backlog')}\n            >\n              Backlog\n            </button>\n          </div>\n        </div>\n\n        {viewMode === 'backlog' ? (\n          <>\n            <div className=\"mb-4 flex\">\n              <input\n                type=\"text\"\n                value={newTaskTitle}\n                onChange={(e) => setNewTaskTitle(e.target.value)}\n                onKeyPress={(e) => {\n                  if (e.key === 'Enter' && newTaskTitle.trim()) {\n                    setBacklogTasks(prev => [...prev, { id: Date.now().toString(), title: newTaskTitle.trim() }]);\n                    setNewTaskTitle('');\n                  }\n                }}\n                placeholder=\"Add a new task to backlog\"\n                className=\"flex-grow p-2 border rounded-l\"\n              />\n              <button \n                onClick={() => {\n                  if (newTaskTitle.trim()) {\n                    setBacklogTasks(prev => [...prev, { id: Date.now().toString(), title: newTaskTitle.trim() }]);\n                    setNewTaskTitle('');\n                  }\n                }}\n                className=\"bg-blue-500 text-white p-2 rounded-r\"\n              >\n                <Plus className=\"w-5 h-5\" />\n              </button>\n            </div>\n            {renderBacklogTasks()}\n          </>\n        ) : (\n          priorities.map((priority) => (\n            <div key={priority.id} className=\"bg-white rounded-lg shadow-md mb-6 p-4\">\n              <div className=\"flex items-center mb-2\">\n               <span className={`w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`}></span>\n                <input\n                  className=\"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\"\n                  placeholder={`Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`}\n                  value={priority.title}\n                  onChange={(e) => setPriorities(prev => prev.map(p => p.id === priority.id ? {...p, title: e.target.value} : p))}\n                />\n              </div>\n              <textarea\n                className=\"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\"\n                placeholder=\"Describe successful outcome\"\n                value={priority.outcome}\n                onChange={(e) => setPriorities(prev => prev.map(p => p.id === priority.id ? {...p, outcome: e.target.value} : p))}\n                rows=\"2\"\n              />\n              {viewMode === 'today' ? (\n                <Droppable droppableId={priority.id.toString()}>\n                  {(provided) => (\n                    <div ref={provided.innerRef} {...provided.droppableProps}>\n                      {getTasksForPriority(priority.id, today).map((task, index) => renderTask(task, index))}\n                      {provided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n              ) : (\n                renderWeekView(priority)\n              )}\n              {viewMode === 'today' && (\n                addingTaskForPriority === priority.id ? (\n                  <div className=\"flex items-center mt-2\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"New task title\"\n                      value={newTaskTitle}\n                      onChange={(e) => setNewTaskTitle(e.target.value)}\n                      onKeyPress={(e) => handleKeyPress(e, priority.id)}\n                      className=\"flex-grow text-sm p-1 border rounded mr-2\"\n                      autoFocus\n                    />\n                    <button onClick={() => handleAddTask(priority.id)} className=\"text-green-500 hover:text-green-700\">\n                      <Plus className=\"w-5 h-5\" />\n                    </button>\n                    <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n                      <X className=\"w-5 h-5\" />\n                    </button>\n                  </div>\n                ) : (\n                  <button \n                    onClick={() => setAddingTaskForPriority(priority.id)} \n                    className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n                  >\n                    <Plus className=\"w-4 h-4 mr-1\" /> Add task\n                  </button>\n                )\n              )}\n            </div>\n          ))\n        )}\n      </div>\n    </DragDropContext>\n  ); */\n\n  // Adding a return function that uses the new renderBacklogTasks() function\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"max-w-4xl mx-auto p-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-2xl font-semibold\">\n            Get Shit Done <span className=\"text-sm text-gray-500\">{today}</span>\n          </h1>\n          <div className=\"flex items-center bg-gray-200 rounded-full\">\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('today')}\n            >\n              Today\n            </button>\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('week')}\n            >\n              Week\n            </button>\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'backlog' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('backlog')}\n            >\n              Backlog\n            </button>\n          </div>\n        </div>\n\n        {viewMode === 'backlog' ? (\n          renderBacklogTasks()\n        ) : (\n          priorities.map((priority) => (\n            <div key={priority.id} className=\"bg-white rounded-lg shadow-md mb-6 p-4\">\n              <div className=\"flex items-center mb-2\">\n               <span className={`w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`}></span>\n                <input\n                  className=\"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\"\n                  placeholder={`Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`}\n                  value={priority.title}\n                  onChange={(e) => setPriorities(prev => prev.map(p => p.id === priority.id ? {...p, title: e.target.value} : p))}\n                />\n              </div>\n              <textarea\n                className=\"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\"\n                placeholder=\"Describe successful outcome\"\n                value={priority.outcome}\n                onChange={(e) => setPriorities(prev => prev.map(p => p.id === priority.id ? {...p, outcome: e.target.value} : p))}\n                rows=\"2\"\n              />\n              {viewMode === 'today' ? (\n                <Droppable droppableId={priority.id.toString()}>\n                  {(provided) => (\n                    <div ref={provided.innerRef} {...provided.droppableProps}>\n                      {getTasksForPriority(priority.id, today).map((task, index) => renderTask(task, index))}\n                      {provided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n              ) : (\n                renderWeekView(priority)\n              )}\n              {viewMode === 'today' && (\n                addingTaskForPriority === priority.id ? (\n                  <div className=\"flex items-center mt-2\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"New task title\"\n                      value={newTaskTitle}\n                      onChange={(e) => setNewTaskTitle(e.target.value)}\n                      onKeyPress={(e) => handleKeyPress(e, priority.id)}\n                      className=\"flex-grow text-sm p-1 border rounded mr-2\"\n                      autoFocus\n                    />\n                    <button onClick={() => handleAddTask(priority.id)} className=\"text-green-500 hover:text-green-700\">\n                      <Plus className=\"w-5 h-5\" />\n                    </button>\n                    <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n                      <X className=\"w-5 h-5\" />\n                    </button>\n                  </div>\n                ) : (\n                  <button \n                    onClick={() => setAddingTaskForPriority(priority.id)} \n                    className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n                  >\n                    <Plus className=\"w-4 h-4 mr-1\" /> Add task\n                  </button>\n                )\n              )}\n            </div>\n          ))\n        )}\n      </div>\n    </DragDropContext>\n  ); \n};\n\nexport default WeeklyPriorities;"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;EACA,MAAM0C,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,oBACExD,OAAA,CAAAE,SAAA;MAAAuD,QAAA,gBACEzD,OAAA,CAACX,SAAS;QAACqE,WAAW,EAAC,SAAS;QAAAD,QAAA,EAC5BE,QAAQ,iBACR3D,OAAA;UAAA,GAAS2D,QAAQ,CAACC,cAAc;UAAEC,GAAG,EAAEF,QAAQ,CAACG,QAAS;UAAAL,QAAA,GACtDjD,YAAY,CAACoC,GAAG,CAAC,CAACjB,IAAI,EAAEoC,KAAK,kBAC5B/D,OAAA,CAACV,SAAS;YAAe0E,WAAW,EAAErC,IAAI,CAACM,EAAG;YAAC8B,KAAK,EAAEA,KAAM;YAAAN,QAAA,EACzDA,CAACE,QAAQ,EAAEM,QAAQ,kBAClBjE,OAAA;cACE6D,GAAG,EAAEF,QAAQ,CAACG,QAAS;cAAA,GACnBH,QAAQ,CAACO,cAAc;cAC3BC,SAAS,EAAE,sDACTF,QAAQ,CAACG,UAAU,GAAG,aAAa,GAAG,EAAE,EACvC;cAAAX,QAAA,gBAEHzD,OAAA;gBAAA,GAAS2D,QAAQ,CAACU,eAAe;gBAAEF,SAAS,EAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}