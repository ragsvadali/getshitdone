{"ast":null,"code":"var _jsxFileName = \"/Users/Rags/task-manager-app/src/components/TestDragDrop.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestDragDrop = () => {\n  _s();\n  const [items, setItems] = useState(['Item 1', 'Item 2', 'Item 3']);\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n    const newItems = Array.from(items);\n    const [reorderedItem] = newItems.splice(result.source.index, 1);\n    newItems.splice(result.destination.index, 0, reorderedItem);\n    setItems(newItems);\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"list\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: item,\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this)\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(TestDragDrop, \"20NBUI3MjMiIB1GYCGSK/1jeWDU=\");\n_c = TestDragDrop;\nexport default TestDragDrop;\nvar _c;\n$RefreshReg$(_c, \"TestDragDrop\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","TestDragDrop","_s","items","setItems","onDragEnd","result","destination","newItems","Array","from","reorderedItem","splice","source","index","children","droppableId","provided","droppableProps","ref","innerRef","map","item","draggableId","draggableProps","dragHandleProps","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c","$RefreshReg$"],"sources":["/Users/Rags/task-manager-app/src/components/TestDragDrop.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst TestDragDrop = () => {\n  const [items, setItems] = useState(['Item 1', 'Item 2', 'Item 3']);\n\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n\n    const newItems = Array.from(items);\n    const [reorderedItem] = newItems.splice(result.source.index, 1);\n    newItems.splice(result.destination.index, 0, reorderedItem);\n\n    setItems(newItems);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"list\">\n        {(provided) => (\n          <ul {...provided.droppableProps} ref={provided.innerRef}>\n            {items.map((item, index) => (\n              <Draggable key={item} draggableId={item} index={index}>\n                {(provided) => (\n                  <li\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                  >\n                    {item}\n                  </li>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </ul>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default TestDragDrop;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;EAElE,MAAMU,SAAS,GAAIC,MAAM,IAAK;IAC5B,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;MACvB;IACF;IAEA,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACP,KAAK,CAAC;IAClC,MAAM,CAACQ,aAAa,CAAC,GAAGH,QAAQ,CAACI,MAAM,CAACN,MAAM,CAACO,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;IAC/DN,QAAQ,CAACI,MAAM,CAACN,MAAM,CAACC,WAAW,CAACO,KAAK,EAAE,CAAC,EAAEH,aAAa,CAAC;IAE3DP,QAAQ,CAACI,QAAQ,CAAC;EACpB,CAAC;EAED,oBACER,OAAA,CAACJ,eAAe;IAACS,SAAS,EAAEA,SAAU;IAAAU,QAAA,eACpCf,OAAA,CAACH,SAAS;MAACmB,WAAW,EAAC,MAAM;MAAAD,QAAA,EACzBE,QAAQ,iBACRjB,OAAA;QAAA,GAAQiB,QAAQ,CAACC,cAAc;QAAEC,GAAG,EAAEF,QAAQ,CAACG,QAAS;QAAAL,QAAA,GACrDZ,KAAK,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAER,KAAK,kBACrBd,OAAA,CAACF,SAAS;UAAYyB,WAAW,EAAED,IAAK;UAACR,KAAK,EAAEA,KAAM;UAAAC,QAAA,EAClDE,QAAQ,iBACRjB,OAAA;YACEmB,GAAG,EAAEF,QAAQ,CAACG,QAAS;YAAA,GACnBH,QAAQ,CAACO,cAAc;YAAA,GACvBP,QAAQ,CAACQ,eAAe;YAAAV,QAAA,EAE3BO;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QACL,GATaP,IAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUT,CACZ,CAAC,EACDZ,QAAQ,CAACa,WAAW;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEtB,CAAC;AAAC3B,EAAA,CAvCID,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAyClB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}