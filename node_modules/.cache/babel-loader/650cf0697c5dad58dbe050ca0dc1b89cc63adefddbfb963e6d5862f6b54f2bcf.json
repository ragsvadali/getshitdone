{"ast":null,"code":"var _jsxFileName = \"/Users/Rags/task-manager-app/src/components/WeeklyPriorities.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckCircle, Circle, Plus, ArrowRight, Trash2, Timer, GripVertical, X } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeeklyPriorities = ({\n  priorities,\n  setPriorities,\n  tasks,\n  setTasks,\n  resetState\n}) => {\n  _s();\n  const [addingTaskForPriority, setAddingTaskForPriority] = useState(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [viewMode, setViewMode] = useState('today');\n  const today = new Date().toISOString().split('T')[0];\n  useEffect(() => {\n    console.log(\"Current tasks:\", tasks);\n    console.log(\"Current priorities:\", priorities);\n  }, [tasks, priorities]);\n  const getTasksForPriority = priorityId => {\n    console.log(`Getting tasks for priority: ${priorityId}, View mode: ${viewMode}`);\n    if (viewMode === 'today') {\n      const todayTasks = tasks[today] || [];\n      return todayTasks.filter(task => task && task.priority === priorityId.toString());\n    } else {\n      // Week view logic\n      const allTasks = Object.values(tasks).flat();\n      return allTasks.filter(task => task && task.priority === priorityId.toString());\n    }\n  };\n  const handleAddTask = priorityId => {\n    if (newTaskTitle.trim()) {\n      const newTask = {\n        id: Date.now().toString(),\n        title: newTaskTitle.trim(),\n        status: 'pending',\n        priority: priorityId.toString(),\n        date: today,\n        completedPomodoros: 0\n      };\n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [today]: [...(prevTasks[today] || []), newTask]\n      }));\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n  const handleKeyPress = (event, priorityId) => {\n    if (event.key === 'Enter') {\n      handleAddTask(priorityId);\n    }\n  };\n  const handleTaskChange = (taskId, date, field, value) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        [field]: value\n      } : task)\n    }));\n  };\n  const toggleTaskStatus = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        status: task.status === 'done' ? 'pending' : 'done'\n      } : task)\n    }));\n  };\n  const deferTask = (taskId, date) => {\n    const tomorrow = new Date(date);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const tomorrowString = tomorrow.toISOString().split('T')[0];\n    setTasks(prevTasks => {\n      const taskToDefer = prevTasks[date].find(task => task.id === taskId);\n      return {\n        ...prevTasks,\n        [date]: prevTasks[date].filter(task => task.id !== taskId),\n        [tomorrowString]: [...(prevTasks[tomorrowString] || []), {\n          ...taskToDefer,\n          date: tomorrowString\n        }]\n      };\n    });\n  };\n  const deleteTask = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].filter(task => task.id !== taskId)\n    }));\n  };\n  const addPomodoro = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        completedPomodoros: (task.completedPomodoros || 0) + 1\n      } : task)\n    }));\n  };\n\n  /* this version did not handle NULL values in tasks very well.\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n  \n    if (!destination) return;\n  \n    console.log('Drag result:', result);\n  \n    setTasks(prevTasks => {\n      console.log('Previous tasks state:', prevTasks);\n  \n      // Find the correct date for the tasks\n      const taskDate = Object.keys(prevTasks).find(date => \n        prevTasks[date].some(task => task.priority === source.droppableId)\n      );\n  \n      if (!taskDate) {\n        console.error('Could not find the date for the dragged task');\n        return prevTasks;\n      }\n  \n      console.log('Task date:', taskDate);\n  \n      const currentTasks = prevTasks[taskDate] || [];\n      console.log('Current tasks:', currentTasks);\n  \n      // Filter tasks for the specific priority\n      const priorityTasks = currentTasks.filter(task => task.priority === source.droppableId);\n      console.log('Priority tasks:', priorityTasks);\n  \n      const newPriorityTasks = Array.from(priorityTasks);\n      const [reorderedItem] = newPriorityTasks.splice(source.index, 1);\n      newPriorityTasks.splice(destination.index, 0, reorderedItem);\n  \n      console.log('Reordered priority tasks:', newPriorityTasks);\n  \n      // Reconstruct the full task list for the date\n      const newTasks = currentTasks.map(task => \n        task.priority === source.droppableId \n          ? newPriorityTasks[newPriorityTasks.findIndex(t => t.id === task.id)] || task\n          : task\n      );\n  \n      console.log('New tasks:', newTasks);\n  \n      return {\n        ...prevTasks,\n        [taskDate]: newTasks\n      };\n    });\n  }; */\n  /* this was working but newTasks wasn't being reconstructed the right way\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n  \n    if (!destination) return;\n  \n    console.log('Drag result:', result);\n  \n    setTasks(prevTasks => {\n      console.log('Previous tasks state:', prevTasks);\n  \n      // Find the correct date for the tasks\n      const taskDate = Object.keys(prevTasks).find(date => \n        Array.isArray(prevTasks[date]) && prevTasks[date].some(task => task && task.priority === source.droppableId)\n      );\n  \n      if (!taskDate) {\n        console.error('Could not find the date for the dragged task');\n        return prevTasks;\n      }\n  \n      console.log('Task date:', taskDate);\n  \n      const currentTasks = prevTasks[taskDate] || [];\n      console.log('Current tasks:', currentTasks);\n  \n      // Filter tasks for the specific priority, excluding null or undefined tasks\n      const priorityTasks = currentTasks.filter(task => task && task.priority === source.droppableId);\n      console.log('Priority tasks:', priorityTasks);\n  \n      if (priorityTasks.length === 0) {\n        console.error('No tasks found for the priority:', source.droppableId);\n        return prevTasks;\n      }\n  \n      const newPriorityTasks = Array.from(priorityTasks);\n      const [reorderedItem] = newPriorityTasks.splice(source.index, 1);\n      newPriorityTasks.splice(destination.index, 0, reorderedItem);\n  \n      console.log('Reordered priority tasks:', newPriorityTasks);\n  \n      // Reconstruct the full task list for the date\n      const newTasks = currentTasks.map(task => \n        task && task.priority === source.droppableId \n          ? newPriorityTasks[newPriorityTasks.findIndex(t => t.id === task.id)] || task\n          : task\n      );\n  \n      console.log('New tasks:', newTasks);\n  \n      return {\n        ...prevTasks,\n        [taskDate]: newTasks\n      };\n    });\n  }; */\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    console.log('Drag result:', result);\n    setTasks(prevTasks => {\n      console.log('Previous tasks state:', prevTasks);\n      const taskDate = Object.keys(prevTasks).find(date => Array.isArray(prevTasks[date]) && prevTasks[date].some(task => task && task.priority === source.droppableId));\n      if (!taskDate) {\n        console.error('Could not find the date for the dragged task');\n        return prevTasks;\n      }\n      console.log('Task date:', taskDate);\n      const currentTasks = prevTasks[taskDate] || [];\n      console.log('Current tasks:', currentTasks);\n\n      // Filter tasks for the specific priority\n      const priorityTasks = currentTasks.filter(task => task && task.priority === source.droppableId);\n      console.log('Priority tasks before reorder:', priorityTasks);\n\n      // Reorder the priority tasks\n      const newPriorityTasks = Array.from(priorityTasks);\n      const [reorderedItem] = newPriorityTasks.splice(source.index, 1);\n      newPriorityTasks.splice(destination.index, 0, reorderedItem);\n      console.log('Reordered priority tasks:', newPriorityTasks);\n\n      // Reconstruct the full task list for the date\n      const newTasks = currentTasks.reduce((acc, task) => {\n        if (!task) return acc;\n        if (task.priority !== source.droppableId) {\n          acc.push(task);\n        } else {\n          // If it's a task from the reordered priority, add it in the new order\n          const newTask = newPriorityTasks.shift();\n          if (newTask) acc.push(newTask);\n        }\n        return acc;\n      }, []);\n      console.log('New tasks after reorder:', newTasks);\n      return {\n        ...prevTasks,\n        [taskDate]: newTasks\n      };\n    });\n  };\n\n  /* render wasn't showing + signs etc\n  const renderTask = (task, index) => (\n    <Draggable key={task.id} draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={`flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`}\n        >\n          <GripVertical className=\"w-4 h-4 text-gray-400 mr-2\" />\n          <button onClick={() => toggleTaskStatus(task.id, task.date)} className=\"mr-2 flex-shrink-0\">\n            {task.status === 'done' ? (\n              <CheckCircle className=\"w-4 h-4 text-green-500\" />\n            ) : (\n              <Circle className=\"w-4 h-4 text-gray-300\" />\n            )}\n          </button>\n          <input\n            value={task.title}\n            onChange={(e) => handleTaskChange(task.id, task.date, 'title', e.target.value)}\n            className={`flex-grow bg-transparent border-none focus:outline-none focus:ring-0 ${task.status === 'done' ? 'text-gray-500' : ''}`}\n            disabled={task.status === 'done'}\n          />\n          <div className=\"flex items-center ml-2\">\n            <button onClick={() => addPomodoro(task.id, task.date)} className=\"text-gray-400 hover:text-gray-600 mr-2\">\n              <Plus className=\"w-4 h-4\" />\n            </button>\n            <Timer className=\"w-4 h-4 text-gray-400 mr-1\" />\n            <span className=\"text-xs text-gray-600 mr-2\">{task.completedPomodoros || 0}</span>\n            <button onClick={() => deferTask(task.id, task.date)} className=\"text-blue-500 hover:text-blue-700 mr-2\">\n              <ArrowRight className=\"w-4 h-4\" />\n            </button>\n            <button onClick={() => deleteTask(task.id, task.date)} className=\"text-red-500 hover:text-red-700\">\n              <Trash2 className=\"w-4 h-4\" />\n            </button>\n          </div>\n          {viewMode === 'week' && (\n            <span className=\"text-xs text-gray-500 ml-2\">{task.date}</span>\n          )}\n        </div>\n      )}\n    </Draggable>\n  ); */\n\n  const renderTask = (task, index) => {\n    if (!task) return null; //skip rendering for null tasks\n\n    return /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: task.id,\n      index: index,\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        className: `flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(GripVertical, {\n          className: \"w-4 h-4 text-gray-400 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleTaskStatus(task.id, task.date),\n          className: \"mr-2 flex-shrink-0\",\n          children: task.status === 'done' ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n            className: \"w-4 h-4 text-green-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Circle, {\n            className: \"w-4 h-4 text-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: task.title,\n          onChange: e => handleTaskChange(task.id, task.date, 'title', e.target.value),\n          className: `flex-grow bg-transparent border-none focus:outline-none focus:ring-0 ${task.status === 'done' ? 'text-gray-500' : ''}`,\n          disabled: task.status === 'done'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center ml-2\",\n          children: [task.status !== 'done' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addPomodoro(task.id, task.date),\n              className: \"text-gray-400 hover:text-gray-600 mr-2\",\n              children: /*#__PURE__*/_jsxDEV(Plus, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deferTask(task.id, task.date),\n              className: \"text-blue-500 hover:text-blue-700 mr-2\",\n              children: /*#__PURE__*/_jsxDEV(ArrowRight, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(task.id, task.date),\n              className: \"text-red-500 hover:text-red-700 mr-2\",\n              children: /*#__PURE__*/_jsxDEV(Trash2, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), task.completedPomodoros > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Timer, {\n              className: \"w-4 h-4 text-gray-400 mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-600 mr-2\",\n              children: task.completedPomodoros\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), viewMode === 'week' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-500 ml-2\",\n          children: task.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-semibold\",\n          children: [viewMode === 'today' ? \"Today's\" : \"This Week's\", \" Priorities\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center bg-gray-200 rounded-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('today'),\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('week'),\n            children: \"Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetState,\n            className: \"ml-4 px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\",\n            children: \"Reset All Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), priorities.map(priority => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md mb-6 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\",\n            placeholder: `Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`,\n            value: priority.title,\n            onChange: e => setPriorities(prev => prev.map(p => p.id === priority.id ? {\n              ...p,\n              title: e.target.value\n            } : p))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\",\n          placeholder: \"Describe successful outcome\",\n          value: priority.outcome,\n          onChange: e => setPriorities(prev => prev.map(p => p.id === priority.id ? {\n            ...p,\n            outcome: e.target.value\n          } : p)),\n          rows: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: priority.id.toString(),\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [getTasksForPriority(priority.id).map((task, index) => renderTask(task, index)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this), viewMode === 'today' && (addingTaskForPriority === priority.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New task title\",\n            value: newTaskTitle,\n            onChange: e => setNewTaskTitle(e.target.value),\n            onKeyPress: e => handleKeyPress(e, priority.id),\n            className: \"flex-grow text-sm p-1 border rounded mr-2\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddTask(priority.id),\n            className: \"text-green-500 hover:text-green-700\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAddingTaskForPriority(null),\n            className: \"text-red-500 hover:text-red-700 ml-2\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setAddingTaskForPriority(priority.id),\n          className: \"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            className: \"w-4 h-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 19\n          }, this), \" Add task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 17\n        }, this))]\n      }, priority.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklyPriorities, \"fKnVsmnvFISHPBdBy3zITHrAqGc=\");\n_c = WeeklyPriorities;\nexport default WeeklyPriorities;\nvar _c;\n$RefreshReg$(_c, \"WeeklyPriorities\");","map":{"version":3,"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","CheckCircle","Circle","Plus","ArrowRight","Trash2","Timer","GripVertical","X","jsxDEV","_jsxDEV","Fragment","_Fragment","WeeklyPriorities","priorities","setPriorities","tasks","setTasks","resetState","_s","addingTaskForPriority","setAddingTaskForPriority","newTaskTitle","setNewTaskTitle","viewMode","setViewMode","today","Date","toISOString","split","console","log","getTasksForPriority","priorityId","todayTasks","filter","task","priority","toString","allTasks","Object","values","flat","handleAddTask","trim","newTask","id","now","title","status","date","completedPomodoros","prevTasks","handleKeyPress","event","key","handleTaskChange","taskId","field","value","map","toggleTaskStatus","deferTask","tomorrow","setDate","getDate","tomorrowString","taskToDefer","find","deleteTask","addPomodoro","onDragEnd","result","source","destination","taskDate","keys","Array","isArray","some","droppableId","error","currentTasks","priorityTasks","newPriorityTasks","from","reorderedItem","splice","index","newTasks","reduce","acc","push","shift","renderTask","draggableId","children","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","className","isDragging","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","target","disabled","type","placeholder","prev","p","outcome","rows","droppableProps","onKeyPress","autoFocus","_c","$RefreshReg$"],"sources":["/Users/Rags/task-manager-app/src/components/WeeklyPriorities.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckCircle, Circle, Plus, ArrowRight, Trash2, Timer, GripVertical, X } from 'lucide-react';\n\nconst WeeklyPriorities = ({ priorities, setPriorities, tasks, setTasks, resetState }) => {\n  const [addingTaskForPriority, setAddingTaskForPriority] = useState(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [viewMode, setViewMode] = useState('today');\n\n  const today = new Date().toISOString().split('T')[0];\n\n  useEffect(() => {\n    console.log(\"Current tasks:\", tasks);\n    console.log(\"Current priorities:\", priorities);\n  }, [tasks, priorities]);\n\n  const getTasksForPriority = (priorityId) => {\n    console.log(`Getting tasks for priority: ${priorityId}, View mode: ${viewMode}`);\n    if (viewMode === 'today') {\n      const todayTasks = tasks[today] || [];\n      return todayTasks.filter(task => task && task.priority === priorityId.toString());\n    } else {\n      // Week view logic\n      const allTasks = Object.values(tasks).flat();\n      return allTasks.filter(task => task && task.priority === priorityId.toString());\n    }\n  };\n\n  const handleAddTask = (priorityId) => {\n    if (newTaskTitle.trim()) {\n      const newTask = {\n        id: Date.now().toString(),\n        title: newTaskTitle.trim(),\n        status: 'pending',\n        priority: priorityId.toString(),\n        date: today,\n        completedPomodoros: 0\n      };\n      \n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [today]: [...(prevTasks[today] || []), newTask]\n      }));\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n\n  const handleKeyPress = (event, priorityId) => {\n    if (event.key === 'Enter') {\n      handleAddTask(priorityId);\n    }\n  };\n\n  const handleTaskChange = (taskId, date, field, value) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, [field]: value } : task\n      )\n    }));\n  };\n\n  const toggleTaskStatus = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, status: task.status === 'done' ? 'pending' : 'done' } : task\n      )\n    }));\n  };\n\n  const deferTask = (taskId, date) => {\n    const tomorrow = new Date(date);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const tomorrowString = tomorrow.toISOString().split('T')[0];\n\n    setTasks(prevTasks => {\n      const taskToDefer = prevTasks[date].find(task => task.id === taskId);\n      return {\n        ...prevTasks,\n        [date]: prevTasks[date].filter(task => task.id !== taskId),\n        [tomorrowString]: [...(prevTasks[tomorrowString] || []), { ...taskToDefer, date: tomorrowString }]\n      };\n    });\n  };\n\n  const deleteTask = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].filter(task => task.id !== taskId)\n    }));\n  };\n\n  const addPomodoro = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, completedPomodoros: (task.completedPomodoros || 0) + 1 } : task\n      )\n    }));\n  };\n\n  /* this version did not handle NULL values in tasks very well.\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n  \n    if (!destination) return;\n  \n    console.log('Drag result:', result);\n  \n    setTasks(prevTasks => {\n      console.log('Previous tasks state:', prevTasks);\n  \n      // Find the correct date for the tasks\n      const taskDate = Object.keys(prevTasks).find(date => \n        prevTasks[date].some(task => task.priority === source.droppableId)\n      );\n  \n      if (!taskDate) {\n        console.error('Could not find the date for the dragged task');\n        return prevTasks;\n      }\n  \n      console.log('Task date:', taskDate);\n  \n      const currentTasks = prevTasks[taskDate] || [];\n      console.log('Current tasks:', currentTasks);\n  \n      // Filter tasks for the specific priority\n      const priorityTasks = currentTasks.filter(task => task.priority === source.droppableId);\n      console.log('Priority tasks:', priorityTasks);\n  \n      const newPriorityTasks = Array.from(priorityTasks);\n      const [reorderedItem] = newPriorityTasks.splice(source.index, 1);\n      newPriorityTasks.splice(destination.index, 0, reorderedItem);\n  \n      console.log('Reordered priority tasks:', newPriorityTasks);\n  \n      // Reconstruct the full task list for the date\n      const newTasks = currentTasks.map(task => \n        task.priority === source.droppableId \n          ? newPriorityTasks[newPriorityTasks.findIndex(t => t.id === task.id)] || task\n          : task\n      );\n  \n      console.log('New tasks:', newTasks);\n  \n      return {\n        ...prevTasks,\n        [taskDate]: newTasks\n      };\n    });\n  }; */\n  /* this was working but newTasks wasn't being reconstructed the right way\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n  \n    if (!destination) return;\n  \n    console.log('Drag result:', result);\n  \n    setTasks(prevTasks => {\n      console.log('Previous tasks state:', prevTasks);\n  \n      // Find the correct date for the tasks\n      const taskDate = Object.keys(prevTasks).find(date => \n        Array.isArray(prevTasks[date]) && prevTasks[date].some(task => task && task.priority === source.droppableId)\n      );\n  \n      if (!taskDate) {\n        console.error('Could not find the date for the dragged task');\n        return prevTasks;\n      }\n  \n      console.log('Task date:', taskDate);\n  \n      const currentTasks = prevTasks[taskDate] || [];\n      console.log('Current tasks:', currentTasks);\n  \n      // Filter tasks for the specific priority, excluding null or undefined tasks\n      const priorityTasks = currentTasks.filter(task => task && task.priority === source.droppableId);\n      console.log('Priority tasks:', priorityTasks);\n  \n      if (priorityTasks.length === 0) {\n        console.error('No tasks found for the priority:', source.droppableId);\n        return prevTasks;\n      }\n  \n      const newPriorityTasks = Array.from(priorityTasks);\n      const [reorderedItem] = newPriorityTasks.splice(source.index, 1);\n      newPriorityTasks.splice(destination.index, 0, reorderedItem);\n  \n      console.log('Reordered priority tasks:', newPriorityTasks);\n  \n      // Reconstruct the full task list for the date\n      const newTasks = currentTasks.map(task => \n        task && task.priority === source.droppableId \n          ? newPriorityTasks[newPriorityTasks.findIndex(t => t.id === task.id)] || task\n          : task\n      );\n  \n      console.log('New tasks:', newTasks);\n  \n      return {\n        ...prevTasks,\n        [taskDate]: newTasks\n      };\n    });\n  }; */\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n  \n    if (!destination) return;\n  \n    console.log('Drag result:', result);\n  \n    setTasks(prevTasks => {\n      console.log('Previous tasks state:', prevTasks);\n  \n      const taskDate = Object.keys(prevTasks).find(date => \n        Array.isArray(prevTasks[date]) && prevTasks[date].some(task => task && task.priority === source.droppableId)\n      );\n  \n      if (!taskDate) {\n        console.error('Could not find the date for the dragged task');\n        return prevTasks;\n      }\n  \n      console.log('Task date:', taskDate);\n  \n      const currentTasks = prevTasks[taskDate] || [];\n      console.log('Current tasks:', currentTasks);\n  \n      // Filter tasks for the specific priority\n      const priorityTasks = currentTasks.filter(task => task && task.priority === source.droppableId);\n      console.log('Priority tasks before reorder:', priorityTasks);\n  \n      // Reorder the priority tasks\n      const newPriorityTasks = Array.from(priorityTasks);\n      const [reorderedItem] = newPriorityTasks.splice(source.index, 1);\n      newPriorityTasks.splice(destination.index, 0, reorderedItem);\n  \n      console.log('Reordered priority tasks:', newPriorityTasks);\n  \n      // Reconstruct the full task list for the date\n      const newTasks = currentTasks.reduce((acc, task) => {\n        if (!task) return acc;\n        if (task.priority !== source.droppableId) {\n          acc.push(task);\n        } else {\n          // If it's a task from the reordered priority, add it in the new order\n          const newTask = newPriorityTasks.shift();\n          if (newTask) acc.push(newTask);\n        }\n        return acc;\n      }, []);\n  \n      console.log('New tasks after reorder:', newTasks);\n  \n      return {\n        ...prevTasks,\n        [taskDate]: newTasks\n      };\n    });\n  };\n\n  /* render wasn't showing + signs etc\n  const renderTask = (task, index) => (\n    <Draggable key={task.id} draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={`flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`}\n        >\n          <GripVertical className=\"w-4 h-4 text-gray-400 mr-2\" />\n          <button onClick={() => toggleTaskStatus(task.id, task.date)} className=\"mr-2 flex-shrink-0\">\n            {task.status === 'done' ? (\n              <CheckCircle className=\"w-4 h-4 text-green-500\" />\n            ) : (\n              <Circle className=\"w-4 h-4 text-gray-300\" />\n            )}\n          </button>\n          <input\n            value={task.title}\n            onChange={(e) => handleTaskChange(task.id, task.date, 'title', e.target.value)}\n            className={`flex-grow bg-transparent border-none focus:outline-none focus:ring-0 ${task.status === 'done' ? 'text-gray-500' : ''}`}\n            disabled={task.status === 'done'}\n          />\n          <div className=\"flex items-center ml-2\">\n            <button onClick={() => addPomodoro(task.id, task.date)} className=\"text-gray-400 hover:text-gray-600 mr-2\">\n              <Plus className=\"w-4 h-4\" />\n            </button>\n            <Timer className=\"w-4 h-4 text-gray-400 mr-1\" />\n            <span className=\"text-xs text-gray-600 mr-2\">{task.completedPomodoros || 0}</span>\n            <button onClick={() => deferTask(task.id, task.date)} className=\"text-blue-500 hover:text-blue-700 mr-2\">\n              <ArrowRight className=\"w-4 h-4\" />\n            </button>\n            <button onClick={() => deleteTask(task.id, task.date)} className=\"text-red-500 hover:text-red-700\">\n              <Trash2 className=\"w-4 h-4\" />\n            </button>\n          </div>\n          {viewMode === 'week' && (\n            <span className=\"text-xs text-gray-500 ml-2\">{task.date}</span>\n          )}\n        </div>\n      )}\n    </Draggable>\n  ); */\n\n  const renderTask = (task, index) => {\n    if (!task) return null; //skip rendering for null tasks\n\n    return(\n      <Draggable key={task.id} draggableId={task.id} index={index}>\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className={`flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`}\n          >\n            <GripVertical className=\"w-4 h-4 text-gray-400 mr-2\" />\n            <button onClick={() => toggleTaskStatus(task.id, task.date)} className=\"mr-2 flex-shrink-0\">\n              {task.status === 'done' ? (\n                <CheckCircle className=\"w-4 h-4 text-green-500\" />\n              ) : (\n                <Circle className=\"w-4 h-4 text-gray-300\" />\n              )}\n            </button>\n            <input\n              value={task.title}\n              onChange={(e) => handleTaskChange(task.id, task.date, 'title', e.target.value)}\n              className={`flex-grow bg-transparent border-none focus:outline-none focus:ring-0 ${task.status === 'done' ? 'text-gray-500' : ''}`}\n              disabled={task.status === 'done'}\n            />\n            <div className=\"flex items-center ml-2\">\n              {task.status !== 'done' && (\n                <>\n                  <button onClick={() => addPomodoro(task.id, task.date)} className=\"text-gray-400 hover:text-gray-600 mr-2\">\n                    <Plus className=\"w-4 h-4\" />\n                  </button>\n                  <button onClick={() => deferTask(task.id, task.date)} className=\"text-blue-500 hover:text-blue-700 mr-2\">\n                    <ArrowRight className=\"w-4 h-4\" />\n                  </button>\n                  <button onClick={() => deleteTask(task.id, task.date)} className=\"text-red-500 hover:text-red-700 mr-2\">\n                    <Trash2 className=\"w-4 h-4\" />\n                  </button>\n                </>\n              )}\n              {task.completedPomodoros > 0 && (\n                <>\n                  <Timer className=\"w-4 h-4 text-gray-400 mr-1\" />\n                  <span className=\"text-xs text-gray-600 mr-2\">{task.completedPomodoros}</span>\n                </>\n              )}\n            </div>\n            {viewMode === 'week' && (\n              <span className=\"text-xs text-gray-500 ml-2\">{task.date}</span>\n            )}\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"max-w-4xl mx-auto p-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-2xl font-semibold\">{viewMode === 'today' ? \"Today's\" : \"This Week's\"} Priorities</h1>\n          <div className=\"flex items-center bg-gray-200 rounded-full\">\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('today')}\n            >\n              Today\n            </button>\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('week')}\n            >\n              Week\n            </button>\n            <button\n            onClick={resetState}\n            className=\"ml-4 px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\"\n          >\n            Reset All Data\n          </button>\n          </div>\n        </div>\n        {priorities.map((priority) => (\n          <div key={priority.id} className=\"bg-white rounded-lg shadow-md mb-6 p-4\">\n            <div className=\"flex items-center mb-2\">\n              <span className={`w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`}></span>\n              <input\n                className=\"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\"\n                placeholder={`Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`}\n                value={priority.title}\n                onChange={(e) => setPriorities(prev => prev.map(p => p.id === priority.id ? {...p, title: e.target.value} : p))}\n              />\n            </div>\n            <textarea\n              className=\"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\"\n              placeholder=\"Describe successful outcome\"\n              value={priority.outcome}\n              onChange={(e) => setPriorities(prev => prev.map(p => p.id === priority.id ? {...p, outcome: e.target.value} : p))}\n              rows=\"2\"\n            />\n            <Droppable droppableId={priority.id.toString()}>\n              {(provided) => (\n                <div ref={provided.innerRef} {...provided.droppableProps}>\n                  {getTasksForPriority(priority.id).map((task, index) => renderTask(task, index))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n            {viewMode === 'today' && (\n              addingTaskForPriority === priority.id ? (\n                <div className=\"flex items-center mt-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"New task title\"\n                    value={newTaskTitle}\n                    onChange={(e) => setNewTaskTitle(e.target.value)}\n                    onKeyPress={(e) => handleKeyPress(e, priority.id)}\n                    className=\"flex-grow text-sm p-1 border rounded mr-2\"\n                    autoFocus\n                  />\n                  <button onClick={() => handleAddTask(priority.id)} className=\"text-green-500 hover:text-green-700\">\n                    <Plus className=\"w-5 h-5\" />\n                  </button>\n                  <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n                    <X className=\"w-5 h-5\" />\n                  </button>\n                </div>\n              ) : (\n                <button \n                  onClick={() => setAddingTaskForPriority(priority.id)} \n                  className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n                >\n                  <Plus className=\"w-4 h-4 mr-1\" /> Add task\n                </button>\n              )\n            )}\n          </div>\n        ))}\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default WeeklyPriorities;"],"mappings":"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CL,CAAC;EAED,MAAMa,WAAW,GAAGA,CAACb,MAAM,EAAEP,IAAI,KAAK;IACpCjC,QAAQ,CAACmC,SAAS,KAAK;MACrB,GAAGA,SAAS;MACZ,CAACF,IAAI,GAAGE,SAAS,CAACF,IAAI,CAAC,CAACU,GAAG,CAACxB,IAAI,IAC9BA,IAAI,CAACU,EAAE,KAAKW,MAAM,GAAG;QAAE,GAAGrB,IAAI;QAAEe,kBAAkB,EAAE,CAACf,IAAI,CAACe,kBAAkB,IAAI,CAAC,IAAI;MAAE,CAAC,GAAGf,IAC7F;IACF,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMmC,SAAS,GAAIC,MAAM,IAAK;IAC5B,MAAM;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGF,MAAM;IAEtC,IAAI,CAACE,WAAW,EAAE;IAElB5C,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEyC,MAAM,CAAC;IAEnCvD,QAAQ,CAACmC,SAAS,IAAI;MACpBtB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEqB,SAAS,CAAC;MAE/C,MAAMuB,QAAQ,GAAGnC,MAAM,CAACoC,IAAI,CAACxB,SAAS,CAAC,CAACgB,IAAI,CAAClB,IAAI,IAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}