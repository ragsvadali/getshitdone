{"ast":null,"code":"var _jsxFileName = \"/Users/Rags/task-manager-app/src/components/WeeklyPriorities.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckCircle, Circle, Plus, ArrowRight, Trash2, Timer, GripVertical, X } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeeklyPriorities = ({\n  priorities,\n  setPriorities,\n  tasks,\n  setTasks,\n  backlogTasks,\n  setBacklogTasks,\n  addTaskToToday\n}) => {\n  _s();\n  const [viewMode, setViewMode] = useState('today');\n  const [addingTaskForPriority, setAddingTaskForPriority] = useState(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  //const [viewMode, setViewMode] = useState('today');\n\n  const today = new Date().toISOString().split('T')[0];\n  //console.log('date is:', today);\n\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const options = {\n      weekday: 'long',\n      day: 'numeric',\n      month: 'long'\n    };\n    return date.toLocaleDateString('en-US', options);\n  };\n  const getTasksForPriority = (priorityId, date) => {\n    return (tasks[date] || []).filter(task => task && task.priority === priorityId.toString());\n  };\n  const handleAddTask = priorityId => {\n    if (newTaskTitle.trim()) {\n      const newTask = {\n        id: Date.now().toString(),\n        title: newTaskTitle.trim(),\n        status: 'pending',\n        priority: priorityId.toString(),\n        date: today,\n        completedPomodoros: 0\n      };\n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [today]: [...(prevTasks[today] || []), newTask]\n      }));\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n  const handleKeyPress = (event, priorityId) => {\n    if (event.key === 'Enter') {\n      handleAddTask(priorityId);\n    }\n  };\n  const toggleTaskStatus = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        status: task.status === 'done' ? 'pending' : 'done'\n      } : task)\n    }));\n  };\n  const deferTask = (taskId, date) => {\n    const tomorrow = new Date(date);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const tomorrowString = tomorrow.toISOString().split('T')[0];\n    setTasks(prevTasks => {\n      const taskToDefer = prevTasks[date].find(task => task.id === taskId);\n      return {\n        ...prevTasks,\n        [date]: prevTasks[date].filter(task => task.id !== taskId),\n        [tomorrowString]: [...(prevTasks[tomorrowString] || []), {\n          ...taskToDefer,\n          date: tomorrowString\n        }]\n      };\n    });\n  };\n  const deleteTask = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].filter(task => task.id !== taskId)\n    }));\n  };\n  const addPomodoro = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task => task.id === taskId ? {\n        ...task,\n        completedPomodoros: (task.completedPomodoros || 0) + 1\n      } : task)\n    }));\n  };\n\n  // Adding a new function to get to parity with daily task addition\n  const handleAddBacklogTask = () => {\n    if (newTaskTitle.trim()) {\n      setBacklogTasks(prev => [...prev, {\n        id: Date.now().toString(),\n        title: newTaskTitle.trim()\n      }]);\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n\n  /* PREV- Adding grippable elements back to Backlog view\n  const renderBacklogTasks = () => {\n    return (\n      <>\n        <Droppable droppableId=\"backlog\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {backlogTasks.map((task, index) => (\n                <Draggable key={task.id} draggableId={task.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      className={`flex items-center bg-white p-3 mb-2 rounded shadow ${\n                        snapshot.isDragging ? 'bg-gray-100' : ''\n                      }`}\n                    >\n                      <div {...provided.dragHandleProps} className=\"mr-2 cursor-move\">\n                        <GripVertical className=\"w-4 h-4 text-gray-400\" />\n                      </div>\n                      <span className=\"flex-grow\">{task.title}</span>\n                      <div className=\"flex items-center\">\n                        <select\n                          onChange={(e) => {\n                            addTaskToToday(task, e.target.value);\n                            setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id));\n                          }}\n                          className=\"mr-2 p-1 border rounded\"\n                        >\n                          <option value=\"\">Schedule to...</option>\n                          {priorities.map((priority) => (\n                            <option key={priority.id} value={priority.id}>\n                              {priority.title || `Priority ${priority.id}`}\n                            </option>\n                          ))}\n                        </select>\n                        <button\n                          onClick={() => setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id))}\n                          className=\"text-red-500 hover:text-red-700\"\n                        >\n                          <Trash2 className=\"w-5 h-5\" />\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n        {addingTaskForPriority === 'backlog' ? (\n          <div className=\"flex items-center mt-2\">\n            <input\n              type=\"text\"\n              placeholder=\"New task title\"\n              value={newTaskTitle}\n              onChange={(e) => setNewTaskTitle(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && handleAddBacklogTask()}\n              className=\"flex-grow text-sm p-1 border rounded mr-2\"\n              autoFocus\n            />\n            <button onClick={handleAddBacklogTask} className=\"text-green-500 hover:text-green-700\">\n              <Plus className=\"w-5 h-5\" />\n            </button>\n            <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n        ) : (\n          <button \n            onClick={() => setAddingTaskForPriority('backlog')} \n            className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n          >\n            <Plus className=\"w-4 h-4 mr-1\" /> Add task\n          </button>\n        )}\n      </>\n    );\n  }; */\n\n  // NEW version to add an always available text input box\n  // Changed elements of className for button: to bg-white, text-green, hover:bg-green-400\n  // Removed focus:ring-2 fron className for input\n  // Also editing the dropdown to have a calendar icon ...\n  const renderBacklogTasks = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a new task to backlog\",\n          value: newTaskTitle,\n          onChange: e => setNewTaskTitle(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter' && newTaskTitle.trim()) {\n              handleAddBacklogTask();\n            }\n          },\n          className: \"flex-grow text-sm p-2 border rounded-l focus:outline-none focus:ring-blue-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddBacklogTask,\n          className: \"bg-white  text-green  p-2  border rounded-r  hover:bg-green-400 focus:outline-none  focus:ring-2  focus:ring-green-300\",\n          disabled: !newTaskTitle.trim(),\n          children: /*#__PURE__*/_jsxDEV(Plus, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"backlog\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [backlogTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: task.id,\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              className: `flex items-center bg-white p-2.5 mb-1.5 rounded shadow-sm ${snapshot.isDragging ? 'bg-gray-100' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                ...provided.dragHandleProps,\n                className: \"mr-2 cursor-move\",\n                children: /*#__PURE__*/_jsxDEV(GripVertical, {\n                  className: \"w-4 h-4 text-gray-400\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"flex-grow text-sm\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: e => {\n                    addTaskToToday(task, e.target.value);\n                    setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id));\n                  },\n                  className: \"mr-2 p-1 text-gray-500 text-sm text-right rounded\",\n                  defaultValue: \"\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    disabled: true,\n                    children: \"Do\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 27\n                  }, this), priorities.map(priority => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: priority.id,\n                    children: priority.title || `Priority ${priority.id}`\n                  }, priority.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id)),\n                  className: \"text-red-500 hover:text-red-700\",\n                  children: /*#__PURE__*/_jsxDEV(Trash2, {\n                    className: \"w-4 h-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  // NEW version to fix dragging?\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (viewMode === 'backlog') {\n      // Handle reordering in backlog\n      setBacklogTasks(prevTasks => {\n        const newTasks = Array.from(prevTasks);\n        const [reorderedItem] = newTasks.splice(source.index, 1);\n        newTasks.splice(destination.index, 0, reorderedItem);\n        return newTasks;\n      });\n    } else if (viewMode === 'today') {\n      // Handle reordering in today's tasks\n      if (source.droppableId !== destination.droppableId) {\n        //console.log('Attempted to move task between priorities. This is not allowed.');\n        return;\n      }\n      const today = new Date().toISOString().split('T')[0];\n      setTasks(prevTasks => {\n        const currentTasks = prevTasks[today] || [];\n        const priorityTasks = currentTasks.filter(task => task.priority === source.droppableId);\n        const newPriorityTasks = Array.from(priorityTasks);\n        const [reorderedItem] = newPriorityTasks.splice(source.index, 1);\n        newPriorityTasks.splice(destination.index, 0, reorderedItem);\n        const newTasks = currentTasks.map(task => task.priority === source.droppableId ? newPriorityTasks.shift() || task : task);\n        return {\n          ...prevTasks,\n          [today]: newTasks\n        };\n      });\n    }\n  };\n  const renderTask = (task, index) => {\n    if (!task) return null;\n    const handleToggleStatus = () => {\n      toggleTaskStatus(task.id, task.date);\n    };\n    const taskContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggleStatus,\n        className: \"mr-2 flex-shrink-0\",\n        children: task.status === 'done' ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-4 h-4 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Circle, {\n          className: \"w-4 h-4 text-gray-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `flex-grow ${task.status === 'done' ? 'text-gray-500 line-through' : ''}`,\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), task.completedPomodoros > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-xs text-gray-600 ml-2\",\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          className: \"w-4 h-4 inline-block mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), task.completedPomodoros]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n    if (viewMode === 'today') {\n      return /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: task.id,\n        index: index,\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          className: `flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(GripVertical, {\n            className: \"w-4 h-4 text-gray-400 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), taskContent, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center ml-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addPomodoro(task.id, task.date),\n              className: \"text-gray-400 hover:text-gray-600 mr-2\",\n              children: /*#__PURE__*/_jsxDEV(Plus, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deferTask(task.id, task.date),\n              className: \"text-blue-500 hover:text-blue-700 mr-2\",\n              children: /*#__PURE__*/_jsxDEV(ArrowRight, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(task.id, task.date),\n              className: \"text-red-500 hover:text-red-700\",\n              children: /*#__PURE__*/_jsxDEV(Trash2, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)\n      }, `${task.id}-${task.priority}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this);\n    } else {\n      const isToday = task.date === today;\n      const taskDate = new Date(task.date);\n      const dayOfWeek = taskDate.toLocaleDateString('en-US', {\n        weekday: 'short'\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center text-sm mb-2\",\n        children: [taskContent, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-xs ml-2 ${isToday ? 'bg-blue-500 text-white px-2 py-1 rounded-full' : 'text-gray-500'}`,\n          children: isToday ? 'Today' : dayOfWeek\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)]\n      }, `${task.id}-${task.priority}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const renderWeekView = priority => {\n    const startOfWeek = new Date(today);\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay());\n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(endOfWeek.getDate() + 6);\n    const weekTasks = Object.entries(tasks).filter(([date]) => {\n      const taskDate = new Date(date);\n      return taskDate >= startOfWeek && taskDate <= endOfWeek;\n    }).flatMap(([date, dateTasks]) => dateTasks.filter(task => task && task.priority === priority.id.toString())).sort((a, b) => new Date(a.date) - new Date(b.date));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: weekTasks.map((task, index) => renderTask(task, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Adding a return function that uses the new renderBacklogTasks() function\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-semibold\",\n          children: [\"Get Shit Done /  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl font-light text-gray-400\",\n            children: formatDate(today)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center bg-gray-200 rounded-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('today'),\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('week'),\n            children: \"Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'backlog' ? 'bg-blue-500 text-white' : 'text-gray-700'}`,\n            onClick: () => setViewMode('backlog'),\n            children: \"Backlog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), viewMode === 'backlog' ? renderBacklogTasks() : priorities.map(priority => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md mb-6 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\",\n            placeholder: `Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`,\n            value: priority.title,\n            onChange: e => setPriorities(prev => prev.map(p => p.id === priority.id ? {\n              ...p,\n              title: e.target.value\n            } : p))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\",\n          placeholder: \"Describe successful outcome\",\n          value: priority.outcome,\n          onChange: e => setPriorities(prev => prev.map(p => p.id === priority.id ? {\n            ...p,\n            outcome: e.target.value\n          } : p)),\n          rows: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 15\n        }, this), viewMode === 'today' ? /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: priority.id.toString(),\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [getTasksForPriority(priority.id, today).map((task, index) => renderTask(task, index)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 17\n        }, this) : renderWeekView(priority), viewMode === 'today' && (addingTaskForPriority === priority.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New task title\",\n            value: newTaskTitle,\n            onChange: e => setNewTaskTitle(e.target.value),\n            onKeyPress: e => handleKeyPress(e, priority.id),\n            className: \"flex-grow text-sm p-1 border rounded mr-2\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddTask(priority.id),\n            className: \"text-green-500 hover:text-green-700\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAddingTaskForPriority(null),\n            className: \"text-red-500 hover:text-red-700 ml-2\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setAddingTaskForPriority(priority.id),\n          className: \"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            className: \"w-4 h-4 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 21\n          }, this), \" Add task\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 19\n        }, this))]\n      }, priority.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 414,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklyPriorities, \"g05gm70v+orCRitiiEpEtcROjp8=\");\n_c = WeeklyPriorities;\nexport default WeeklyPriorities;\nvar _c;\n$RefreshReg$(_c, \"WeeklyPriorities\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","CheckCircle","Circle","Plus","ArrowRight","Trash2","Timer","GripVertical","X","jsxDEV","_jsxDEV","Fragment","_Fragment","WeeklyPriorities","priorities","setPriorities","tasks","setTasks","backlogTasks","setBacklogTasks","addTaskToToday","_s","viewMode","setViewMode","addingTaskForPriority","setAddingTaskForPriority","newTaskTitle","setNewTaskTitle","today","Date","toISOString","split","formatDate","dateString","date","options","weekday","day","month","toLocaleDateString","getTasksForPriority","priorityId","filter","task","priority","toString","handleAddTask","trim","newTask","id","now","title","status","completedPomodoros","prevTasks","handleKeyPress","event","key","toggleTaskStatus","taskId","map","deferTask","tomorrow","setDate","getDate","tomorrowString","taskToDefer","find","deleteTask","addPomodoro","handleAddBacklogTask","prev","renderBacklogTasks","children","className","type","placeholder","value","onChange","e","target","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","droppableId","provided","droppableProps","ref","innerRef","index","draggableId","snapshot","draggableProps","isDragging","dragHandleProps","t","defaultValue","onDragEnd","result","source","destination","newTasks","Array","from","reorderedItem","splice","currentTasks","priorityTasks","newPriorityTasks","shift","renderTask","handleToggleStatus","taskContent","isToday","taskDate","dayOfWeek","renderWeekView","startOfWeek","getDay","endOfWeek","weekTasks","Object","entries","flatMap","dateTasks","sort","a","b","p","outcome","rows","autoFocus","_c","$RefreshReg$"],"sources":["/Users/Rags/task-manager-app/src/components/WeeklyPriorities.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CheckCircle, Circle, Plus, ArrowRight, Trash2, Timer, GripVertical, X } from 'lucide-react';\n\n\nconst WeeklyPriorities = ({ priorities, setPriorities, tasks, setTasks, backlogTasks, setBacklogTasks, addTaskToToday }) => {\n  const [viewMode, setViewMode] = useState('today');\n  const [addingTaskForPriority, setAddingTaskForPriority] = useState(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  //const [viewMode, setViewMode] = useState('today');\n\n  const today = new Date().toISOString().split('T')[0];\n  //console.log('date is:', today);\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const options = { weekday: 'long', day: 'numeric', month: 'long' };\n    return date.toLocaleDateString('en-US', options);\n  };\n\n  const getTasksForPriority = (priorityId, date) => {\n    return (tasks[date] || []).filter(task => task && task.priority === priorityId.toString());\n  };\n\n  const handleAddTask = (priorityId) => {\n    if (newTaskTitle.trim()) {\n      const newTask = {\n        id: Date.now().toString(),\n        title: newTaskTitle.trim(),\n        status: 'pending',\n        priority: priorityId.toString(),\n        date: today,\n        completedPomodoros: 0\n      };\n      \n      setTasks(prevTasks => ({\n        ...prevTasks,\n        [today]: [...(prevTasks[today] || []), newTask]\n      }));\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n\n  const handleKeyPress = (event, priorityId) => {\n    if (event.key === 'Enter') {\n      handleAddTask(priorityId);\n    }\n  };\n\n  const toggleTaskStatus = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, status: task.status === 'done' ? 'pending' : 'done' } : task\n      )\n    }));\n  };\n\n  const deferTask = (taskId, date) => {\n    const tomorrow = new Date(date);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const tomorrowString = tomorrow.toISOString().split('T')[0];\n\n    setTasks(prevTasks => {\n      const taskToDefer = prevTasks[date].find(task => task.id === taskId);\n      return {\n        ...prevTasks,\n        [date]: prevTasks[date].filter(task => task.id !== taskId),\n        [tomorrowString]: [...(prevTasks[tomorrowString] || []), { ...taskToDefer, date: tomorrowString }]\n      };\n    });\n  };\n\n  const deleteTask = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].filter(task => task.id !== taskId)\n    }));\n  };\n\n  const addPomodoro = (taskId, date) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [date]: prevTasks[date].map(task =>\n        task.id === taskId ? { ...task, completedPomodoros: (task.completedPomodoros || 0) + 1 } : task\n      )\n    }));\n  };\n\n  // Adding a new function to get to parity with daily task addition\n  const handleAddBacklogTask = () => {\n    if (newTaskTitle.trim()) {\n      setBacklogTasks(prev => [...prev, { id: Date.now().toString(), title: newTaskTitle.trim() }]);\n      setNewTaskTitle('');\n      setAddingTaskForPriority(null);\n    }\n  };\n\n\n  /* PREV- Adding grippable elements back to Backlog view\n  const renderBacklogTasks = () => {\n    return (\n      <>\n        <Droppable droppableId=\"backlog\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {backlogTasks.map((task, index) => (\n                <Draggable key={task.id} draggableId={task.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      className={`flex items-center bg-white p-3 mb-2 rounded shadow ${\n                        snapshot.isDragging ? 'bg-gray-100' : ''\n                      }`}\n                    >\n                      <div {...provided.dragHandleProps} className=\"mr-2 cursor-move\">\n                        <GripVertical className=\"w-4 h-4 text-gray-400\" />\n                      </div>\n                      <span className=\"flex-grow\">{task.title}</span>\n                      <div className=\"flex items-center\">\n                        <select\n                          onChange={(e) => {\n                            addTaskToToday(task, e.target.value);\n                            setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id));\n                          }}\n                          className=\"mr-2 p-1 border rounded\"\n                        >\n                          <option value=\"\">Schedule to...</option>\n                          {priorities.map((priority) => (\n                            <option key={priority.id} value={priority.id}>\n                              {priority.title || `Priority ${priority.id}`}\n                            </option>\n                          ))}\n                        </select>\n                        <button\n                          onClick={() => setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id))}\n                          className=\"text-red-500 hover:text-red-700\"\n                        >\n                          <Trash2 className=\"w-5 h-5\" />\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n        {addingTaskForPriority === 'backlog' ? (\n          <div className=\"flex items-center mt-2\">\n            <input\n              type=\"text\"\n              placeholder=\"New task title\"\n              value={newTaskTitle}\n              onChange={(e) => setNewTaskTitle(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && handleAddBacklogTask()}\n              className=\"flex-grow text-sm p-1 border rounded mr-2\"\n              autoFocus\n            />\n            <button onClick={handleAddBacklogTask} className=\"text-green-500 hover:text-green-700\">\n              <Plus className=\"w-5 h-5\" />\n            </button>\n            <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n        ) : (\n          <button \n            onClick={() => setAddingTaskForPriority('backlog')} \n            className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n          >\n            <Plus className=\"w-4 h-4 mr-1\" /> Add task\n          </button>\n        )}\n      </>\n    );\n  }; */\n\n  // NEW version to add an always available text input box\n  // Changed elements of className for button: to bg-white, text-green, hover:bg-green-400\n  // Removed focus:ring-2 fron className for input\n  // Also editing the dropdown to have a calendar icon ...\n  const renderBacklogTasks = () => {\n    return (\n      <>\n        <div className=\"mb-4 flex items-center\">\n          <input\n            type=\"text\"\n            placeholder=\"Add a new task to backlog\"\n            value={newTaskTitle}\n            onChange={(e) => setNewTaskTitle(e.target.value)}\n            onKeyPress={(e) => {\n              if (e.key === 'Enter' && newTaskTitle.trim()) {\n                handleAddBacklogTask();\n              }\n            }}\n            className=\"flex-grow text-sm p-2 border rounded-l focus:outline-none focus:ring-blue-300\"\n          />\n          <button \n            onClick={handleAddBacklogTask} \n            className=\"bg-white \n                      text-green \n                      p-2 \n                      border\n                      rounded-r \n                      hover:bg-green-400\n                      focus:outline-none \n                      focus:ring-2 \n                      focus:ring-green-300\"\n            disabled={!newTaskTitle.trim()}\n          >\n            <Plus className=\"w-5 h-5\" />\n          </button>\n        </div>\n        <Droppable droppableId=\"backlog\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {backlogTasks.map((task, index) => (\n                <Draggable key={task.id} draggableId={task.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      className={`flex items-center bg-white p-2.5 mb-1.5 rounded shadow-sm ${\n                        snapshot.isDragging ? 'bg-gray-100' : ''\n                      }`}\n                    >\n                      <div {...provided.dragHandleProps} className=\"mr-2 cursor-move\">\n                        <GripVertical className=\"w-4 h-4 text-gray-400\" />\n                      </div>\n                      <span className=\"flex-grow text-sm\">{task.title}</span>\n                      <div className=\"flex items-center\">\n                        <select\n                          onChange={(e) => {\n                            addTaskToToday(task, e.target.value);\n                            setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id));\n                          }}\n                          className=\"mr-2 p-1 text-gray-500 text-sm text-right rounded\"\n                          defaultValue=\"\"\n                        >\n                          <option value=\"\" disabled>Do\n                            </option>\n                          {priorities.map((priority) => (\n                            <option key={priority.id} value={priority.id}>\n                              {priority.title || `Priority ${priority.id}`}\n                            </option>\n                          ))}\n                        </select>\n                        <button\n                          onClick={() => setBacklogTasks(prevTasks => prevTasks.filter(t => t.id !== task.id))}\n                          className=\"text-red-500 hover:text-red-700\"\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </>\n    );\n  };\n\n\n  // NEW version to fix dragging?\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n  \n    if (!destination) {\n      return;\n    }\n  \n    if (viewMode === 'backlog') {\n      // Handle reordering in backlog\n      setBacklogTasks(prevTasks => {\n        const newTasks = Array.from(prevTasks);\n        const [reorderedItem] = newTasks.splice(source.index, 1);\n        newTasks.splice(destination.index, 0, reorderedItem);\n        return newTasks;\n      });\n    } else if (viewMode === 'today') {\n      // Handle reordering in today's tasks\n      if (source.droppableId !== destination.droppableId) {\n        //console.log('Attempted to move task between priorities. This is not allowed.');\n        return;\n      }\n  \n      const today = new Date().toISOString().split('T')[0];\n      setTasks(prevTasks => {\n        const currentTasks = prevTasks[today] || [];\n        const priorityTasks = currentTasks.filter(task => task.priority === source.droppableId);\n        \n        const newPriorityTasks = Array.from(priorityTasks);\n        const [reorderedItem] = newPriorityTasks.splice(source.index, 1);\n        newPriorityTasks.splice(destination.index, 0, reorderedItem);\n  \n        const newTasks = currentTasks.map(task => \n          task.priority === source.droppableId\n            ? newPriorityTasks.shift() || task\n            : task\n        );\n  \n        return {\n          ...prevTasks,\n          [today]: newTasks\n        };\n      });\n    }\n  };\n\n  const renderTask = (task, index) => {\n    if (!task) return null;\n  \n    const handleToggleStatus = () => {\n      toggleTaskStatus(task.id, task.date);\n    };\n  \n    const taskContent = (\n      <>\n        <button onClick={handleToggleStatus} className=\"mr-2 flex-shrink-0\">\n          {task.status === 'done' ? (\n            <CheckCircle className=\"w-4 h-4 text-green-500\" />\n          ) : (\n            <Circle className=\"w-4 h-4 text-gray-300\" />\n          )}\n        </button>\n        <span className={`flex-grow ${task.status === 'done' ? 'text-gray-500 line-through' : ''}`}>\n          {task.title}\n        </span>\n        {task.completedPomodoros > 0 && (\n          <span className=\"text-xs text-gray-600 ml-2\">\n            <Timer className=\"w-4 h-4 inline-block mr-1\" />\n            {task.completedPomodoros}\n          </span>\n        )}\n      </>\n    );\n  \n    if (viewMode === 'today') {\n      return (\n        <Draggable key={`${task.id}-${task.priority}`} draggableId={task.id} index={index}>\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              className={`flex items-center text-sm mb-2 ${snapshot.isDragging ? 'bg-gray-100' : ''}`}\n            >\n              <GripVertical className=\"w-4 h-4 text-gray-400 mr-2\" />\n              {taskContent}\n              <div className=\"flex items-center ml-2\">\n                <button onClick={() => addPomodoro(task.id, task.date)} className=\"text-gray-400 hover:text-gray-600 mr-2\">\n                  <Plus className=\"w-4 h-4\" />\n                </button>\n                <button onClick={() => deferTask(task.id, task.date)} className=\"text-blue-500 hover:text-blue-700 mr-2\">\n                  <ArrowRight className=\"w-4 h-4\" />\n                </button>\n                <button onClick={() => deleteTask(task.id, task.date)} className=\"text-red-500 hover:text-red-700\">\n                  <Trash2 className=\"w-4 h-4\" />\n                </button>\n              </div>\n            </div>\n          )}\n        </Draggable>\n      );\n    } else {\n      const isToday = task.date === today;\n      const taskDate = new Date(task.date);\n      const dayOfWeek = taskDate.toLocaleDateString('en-US', { weekday: 'short' });\n      \n      return (\n        <div key={`${task.id}-${task.priority}`} className=\"flex items-center text-sm mb-2\">\n          {taskContent}\n          <span className={`text-xs ml-2 ${isToday ? 'bg-blue-500 text-white px-2 py-1 rounded-full' : 'text-gray-500'}`}>\n            {isToday ? 'Today' : dayOfWeek}\n          </span>\n        </div>\n      );\n    }\n  };\n  \n  const renderWeekView = (priority) => {\n    const startOfWeek = new Date(today);\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay());\n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(endOfWeek.getDate() + 6);\n  \n    const weekTasks = Object.entries(tasks)\n      .filter(([date]) => {\n        const taskDate = new Date(date);\n        return taskDate >= startOfWeek && taskDate <= endOfWeek;\n      })\n      .flatMap(([date, dateTasks]) => \n        dateTasks.filter(task => task && task.priority === priority.id.toString())\n      )\n      .sort((a, b) => new Date(a.date) - new Date(b.date));\n  \n    return (\n      <div>\n        {weekTasks.map((task, index) => renderTask(task, index))}\n      </div>\n    );\n  };\n\n  // Adding a return function that uses the new renderBacklogTasks() function\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"max-w-4xl mx-auto p-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h1 className=\"text-2xl font-semibold\">\n            Get Shit Done /  <span className=\"text-xl font-light text-gray-400\">{formatDate(today)}</span>\n          </h1>\n          <div className=\"flex items-center bg-gray-200 rounded-full\">\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'today' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('today')}\n            >\n              Today\n            </button>\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'week' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('week')}\n            >\n              Week\n            </button>\n            <button\n              className={`px-4 py-2 rounded-full text-sm font-medium ${viewMode === 'backlog' ? 'bg-blue-500 text-white' : 'text-gray-700'}`}\n              onClick={() => setViewMode('backlog')}\n            >\n              Backlog\n            </button>\n          </div>\n        </div>\n\n        {viewMode === 'backlog' ? (\n          renderBacklogTasks()\n        ) : (\n          priorities.map((priority) => (\n            <div key={priority.id} className=\"bg-white rounded-lg shadow-md mb-6 p-4\">\n              <div className=\"flex items-center mb-2\">\n               <span className={`w-3 h-3 rounded-full mr-2 ${priority.type === 'top' ? 'bg-blue-500' : 'bg-blue-300'}`}></span>\n                <input\n                  className=\"text-lg font-medium bg-transparent border-none focus:outline-none focus:ring-0 w-full\"\n                  placeholder={`Enter ${priority.type === 'top' ? 'top' : 'secondary'} priority`}\n                  value={priority.title}\n                  onChange={(e) => setPriorities(prev => prev.map(p => p.id === priority.id ? {...p, title: e.target.value} : p))}\n                />\n              </div>\n              <textarea\n                className=\"w-full p-2 text-sm bg-gray-50 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-300\"\n                placeholder=\"Describe successful outcome\"\n                value={priority.outcome}\n                onChange={(e) => setPriorities(prev => prev.map(p => p.id === priority.id ? {...p, outcome: e.target.value} : p))}\n                rows=\"2\"\n              />\n              {viewMode === 'today' ? (\n                <Droppable droppableId={priority.id.toString()}>\n                  {(provided) => (\n                    <div ref={provided.innerRef} {...provided.droppableProps}>\n                      {getTasksForPriority(priority.id, today).map((task, index) => renderTask(task, index))}\n                      {provided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n              ) : (\n                renderWeekView(priority)\n              )}\n              {viewMode === 'today' && (\n                addingTaskForPriority === priority.id ? (\n                  <div className=\"flex items-center mt-2\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"New task title\"\n                      value={newTaskTitle}\n                      onChange={(e) => setNewTaskTitle(e.target.value)}\n                      onKeyPress={(e) => handleKeyPress(e, priority.id)}\n                      className=\"flex-grow text-sm p-1 border rounded mr-2\"\n                      autoFocus\n                    />\n                    <button onClick={() => handleAddTask(priority.id)} className=\"text-green-500 hover:text-green-700\">\n                      <Plus className=\"w-5 h-5\" />\n                    </button>\n                    <button onClick={() => setAddingTaskForPriority(null)} className=\"text-red-500 hover:text-red-700 ml-2\">\n                      <X className=\"w-5 h-5\" />\n                    </button>\n                  </div>\n                ) : (\n                  <button \n                    onClick={() => setAddingTaskForPriority(priority.id)} \n                    className=\"text-sm text-blue-500 hover:text-blue-700 mt-2 flex items-center\"\n                  >\n                    <Plus className=\"w-4 h-4 mr-1\" /> Add task\n                  </button>\n                )\n              )}\n            </div>\n          ))\n        )}\n      </div>\n    </DragDropContext>\n  ); \n};\n\nexport default WeeklyPriorities;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}